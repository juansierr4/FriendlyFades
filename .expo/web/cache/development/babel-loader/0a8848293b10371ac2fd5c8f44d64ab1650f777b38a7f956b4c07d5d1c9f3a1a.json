{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _reactNativeDeckSwiper = _interopRequireDefault(require(\"react-native-deck-swiper\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\jsier\\\\Desktop\\\\AwesomeProject\\\\App.js\";\nvar _Dimensions$get = _reactNative.Dimensions.get('window'),\n  height = _Dimensions$get.height,\n  width = _Dimensions$get.width;\nvar cardData = [{\n  id: 1,\n  text: 'NIGGA',\n  color: 'red'\n}, {\n  id: 2,\n  color: 'lightblue'\n}, {\n  id: 3,\n  color: 'beige'\n}, {\n  id: 4,\n  color: 'orange'\n}, {\n  id: 5,\n  color: 'pink'\n}];\nvar App = function App() {\n  var handleSwipeLeft = function handleSwipeLeft() {\n    console.log('Swiped Left!');\n  };\n  var handleSwipeRight = function handleSwipeRight() {\n    console.log('Swiped Right!');\n  };\n  return (0, _jsxRuntime.jsx)(_reactNative.View, {\n    style: styles.container,\n    children: (0, _jsxRuntime.jsx)(_reactNativeDeckSwiper.default, {\n      cardHorizontalMargin: width * 0.05,\n      cardVerticalMargin: height * 0.1,\n      verticalSwipe: false,\n      cards: cardData,\n      renderCard: function renderCard(card) {\n        return (0, _jsxRuntime.jsx)(_reactNative.View, {\n          style: Object.assign({}, styles.card, {\n            backgroundColor: card.color\n          }),\n          children: (0, _jsxRuntime.jsx)(_reactNative.Text, {\n            style: styles.text,\n            children: card.color\n          })\n        }, card.id);\n      },\n      onSwipedLeft: handleSwipeLeft,\n      onSwipedRight: handleSwipeRight,\n      backgroundColor: \"#F5F5F5\",\n      cardIndex: 0,\n      infinite: true,\n      stackSize: 3,\n      stackSeparation: height * 0.03,\n      animateCardOpacity: true,\n      animateOverlayLabelsOpacity: true,\n      overlayLabels: {\n        left: {\n          title: '✖',\n          style: {\n            label: {\n              backgroundColor: 'red',\n              borderRadius: width * 0.5,\n              height: height * 0.1,\n              width: height * 0.1,\n              textAlign: 'center',\n              color: '#fff'\n            },\n            wrapper: {\n              flexDirection: 'column',\n              alignItems: 'flex-end',\n              justifyContent: 'flex-start',\n              marginTop: height * 0.05,\n              marginLeft: -height * 0.05\n            }\n          }\n        },\n        right: {\n          title: '✔',\n          style: {\n            label: {\n              backgroundColor: 'green',\n              borderRadius: width * 0.5,\n              height: height * 0.1,\n              width: height * 0.1,\n              textAlign: 'center',\n              color: '#fff'\n            },\n            wrapper: {\n              flexDirection: 'column',\n              alignItems: 'flex-start',\n              justifyContent: 'flex-start',\n              marginTop: height * 0.05,\n              marginLeft: height * 0.05\n            }\n          }\n        }\n      }\n    })\n  });\n};\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  card: {\n    alignSelf: 'center',\n    width: width * 0.85,\n    height: height * 0.7,\n    borderRadius: 10,\n    borderWidth: 0.5,\n    borderColor: '#000',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  text: {\n    textAlign: 'center',\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#000',\n    backgroundColor: '#fff'\n  }\n});\nvar _default = exports.default = App;","map":{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_reactNativeDeckSwiper","_jsxRuntime","_this","_jsxFileName","_Dimensions$get","Dimensions","get","height","width","cardData","id","text","color","App","handleSwipeLeft","console","log","handleSwipeRight","jsx","View","style","styles","container","children","default","cardHorizontalMargin","cardVerticalMargin","verticalSwipe","cards","renderCard","card","Object","assign","backgroundColor","Text","onSwipedLeft","onSwipedRight","cardIndex","infinite","stackSize","stackSeparation","animateCardOpacity","animateOverlayLabelsOpacity","overlayLabels","left","title","label","borderRadius","textAlign","wrapper","flexDirection","alignItems","justifyContent","marginTop","marginLeft","right","StyleSheet","create","flex","alignSelf","borderWidth","borderColor","fontSize","fontWeight","_default","exports"],"sources":["C:/Users/jsier/Desktop/AwesomeProject/App.js"],"sourcesContent":["import React from 'react';\r\nimport { View, StyleSheet, Text, Dimensions } from 'react-native';\r\nimport Swiper from 'react-native-deck-swiper';\r\n\r\n//Get the Window's width and height\r\nconst { height, width } = Dimensions.get( 'window' );\r\n\r\n//Sample card data\r\nconst cardData = [\r\n  { id: 1, text: 'NIGGA', color:'red' },\r\n  { id: 2, color: 'lightblue' },\r\n  { id: 3, color: 'beige' },\r\n  { id: 4, color: 'orange' },\r\n  { id: 5, color: 'pink' }\r\n];\r\n\r\n//main app component\r\nconst App = () => {\r\n  const handleSwipeLeft = () => {\r\n    console.log( 'Swiped Left!' );\r\n    // Handle actions when swiped left\r\n  };\r\n\r\n  const handleSwipeRight = () => {\r\n    console.log( 'Swiped Right!' );\r\n    // Handle actions when swiped right\r\n  };\r\n\r\n  //component's rendering\r\n  return (\r\n    <View style={ styles.container }>\r\n      <Swiper\r\n        cardHorizontalMargin={ width * 0.05 }\r\n        cardVerticalMargin={ height * 0.1 }\r\n        verticalSwipe={ false }\r\n        cards={ cardData }\r\n        renderCard={ ( card ) => {\r\n          return (\r\n            <View key={ card.id } style={ { ...styles.card, backgroundColor: card.color } }>\r\n              <Text style={ styles.text }>{ card.color }</Text>\r\n            </View>\r\n          )\r\n        } }\r\n        onSwipedLeft={ handleSwipeLeft }\r\n        onSwipedRight={ handleSwipeRight }\r\n        backgroundColor='#F5F5F5'\r\n        cardIndex={ 0 }\r\n        infinite={ true }   // for making it loop(1st card will appear after last card is swiped)\r\n        stackSize={ 3 }\r\n        stackSeparation={ height * 0.03 }\r\n        animateCardOpacity\r\n        animateOverlayLabelsOpacity\r\n        overlayLabels={{\r\n            left: {\r\n              title: '✖',\r\n              style: {\r\n                label: {\r\n                  backgroundColor: 'red',\r\n                  borderRadius: width * 0.5,   // using max. width as radius for making it circular\r\n                  height: height * 0.1,\r\n                  width: height * 0.1,\r\n                  textAlign: 'center',\r\n                  color: '#fff',\r\n                },\r\n                wrapper: {\r\n                  flexDirection: 'column',\r\n                  alignItems: 'flex-end',\r\n                  justifyContent: 'flex-start',\r\n                  marginTop: height * 0.05,\r\n                  marginLeft: -height * 0.05\r\n                }\r\n              }\r\n            },\r\n            right: {\r\n              title: '✔',\r\n              style: {\r\n                label: {\r\n                  backgroundColor: 'green',\r\n                  borderRadius: width * 0.5, \r\n                  height: height * 0.1,\r\n                  width: height * 0.1,\r\n                  textAlign: 'center',\r\n                  color: '#fff',\r\n                },\r\n                wrapper: {\r\n                  flexDirection: 'column',\r\n                  alignItems: 'flex-start',\r\n                  justifyContent: 'flex-start',\r\n                  marginTop: height * 0.05,\r\n                  marginLeft: height * 0.05\r\n                }\r\n              }\r\n            },\r\n          }}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\n//Styles for the app\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1\r\n  },\r\n  card: {\r\n    alignSelf: 'center',\r\n    width: width * 0.85,\r\n    height: height * 0.7,\r\n    borderRadius: 10,\r\n    borderWidth: 0.5,\r\n    borderColor: '#000',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  text: {\r\n    textAlign: 'center',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    color: '#000',\r\n    backgroundColor: '#fff'\r\n  }\r\n});\r\n\r\n\r\n//Export app component\r\nexport default App;"],"mappings":";;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AACA,IAAAE,sBAAA,GAAAH,sBAAA,CAAAC,OAAA;AAA8C,IAAAG,WAAA,GAAAH,OAAA;AAAA,IAAAI,KAAA;EAAAC,YAAA;AAG9C,IAAAC,eAAA,GAA0BC,uBAAU,CAACC,GAAG,CAAE,QAAS,CAAC;EAA5CC,MAAM,GAAAH,eAAA,CAANG,MAAM;EAAEC,KAAK,GAAAJ,eAAA,CAALI,KAAK;AAGrB,IAAMC,QAAQ,GAAG,CACf;EAAEC,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,OAAO;EAAEC,KAAK,EAAC;AAAM,CAAC,EACrC;EAAEF,EAAE,EAAE,CAAC;EAAEE,KAAK,EAAE;AAAY,CAAC,EAC7B;EAAEF,EAAE,EAAE,CAAC;EAAEE,KAAK,EAAE;AAAQ,CAAC,EACzB;EAAEF,EAAE,EAAE,CAAC;EAAEE,KAAK,EAAE;AAAS,CAAC,EAC1B;EAAEF,EAAE,EAAE,CAAC;EAAEE,KAAK,EAAE;AAAO,CAAC,CACzB;AAGD,IAAMC,GAAG,GAAG,SAANA,GAAGA,CAAA,EAAS;EAChB,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;IAC5BC,OAAO,CAACC,GAAG,CAAE,cAAe,CAAC;EAE/B,CAAC;EAED,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAS;IAC7BF,OAAO,CAACC,GAAG,CAAE,eAAgB,CAAC;EAEhC,CAAC;EAGD,OACE,IAAAf,WAAA,CAAAiB,GAAA,EAACnB,YAAA,CAAAoB,IAAI;IAACC,KAAK,EAAGC,MAAM,CAACC,SAAW;IAAAC,QAAA,EAC9B,IAAAtB,WAAA,CAAAiB,GAAA,EAAClB,sBAAA,CAAAwB,OAAM;MACLC,oBAAoB,EAAGjB,KAAK,GAAG,IAAM;MACrCkB,kBAAkB,EAAGnB,MAAM,GAAG,GAAK;MACnCoB,aAAa,EAAG,KAAO;MACvBC,KAAK,EAAGnB,QAAU;MAClBoB,UAAU,EAAG,SAAAA,WAAEC,IAAI,EAAM;QACvB,OACE,IAAA7B,WAAA,CAAAiB,GAAA,EAACnB,YAAA,CAAAoB,IAAI;UAAiBC,KAAK,EAAAW,MAAA,CAAAC,MAAA,KAAQX,MAAM,CAACS,IAAI;YAAEG,eAAe,EAAEH,IAAI,CAAClB;UAAK,EAAI;UAAAW,QAAA,EAC7E,IAAAtB,WAAA,CAAAiB,GAAA,EAACnB,YAAA,CAAAmC,IAAI;YAACd,KAAK,EAAGC,MAAM,CAACV,IAAM;YAAAY,QAAA,EAAGO,IAAI,CAAClB;UAAK,CAAQ;QAAC,GADvCkB,IAAI,CAACpB,EAEX,CAAC;MAEX,CAAG;MACHyB,YAAY,EAAGrB,eAAiB;MAChCsB,aAAa,EAAGnB,gBAAkB;MAClCgB,eAAe,EAAC,SAAS;MACzBI,SAAS,EAAG,CAAG;MACfC,QAAQ,EAAG,IAAM;MACjBC,SAAS,EAAG,CAAG;MACfC,eAAe,EAAGjC,MAAM,GAAG,IAAM;MACjCkC,kBAAkB;MAClBC,2BAA2B;MAC3BC,aAAa,EAAE;QACXC,IAAI,EAAE;UACJC,KAAK,EAAE,GAAG;UACVzB,KAAK,EAAE;YACL0B,KAAK,EAAE;cACLb,eAAe,EAAE,KAAK;cACtBc,YAAY,EAAEvC,KAAK,GAAG,GAAG;cACzBD,MAAM,EAAEA,MAAM,GAAG,GAAG;cACpBC,KAAK,EAAED,MAAM,GAAG,GAAG;cACnByC,SAAS,EAAE,QAAQ;cACnBpC,KAAK,EAAE;YACT,CAAC;YACDqC,OAAO,EAAE;cACPC,aAAa,EAAE,QAAQ;cACvBC,UAAU,EAAE,UAAU;cACtBC,cAAc,EAAE,YAAY;cAC5BC,SAAS,EAAE9C,MAAM,GAAG,IAAI;cACxB+C,UAAU,EAAE,CAAC/C,MAAM,GAAG;YACxB;UACF;QACF,CAAC;QACDgD,KAAK,EAAE;UACLV,KAAK,EAAE,GAAG;UACVzB,KAAK,EAAE;YACL0B,KAAK,EAAE;cACLb,eAAe,EAAE,OAAO;cACxBc,YAAY,EAAEvC,KAAK,GAAG,GAAG;cACzBD,MAAM,EAAEA,MAAM,GAAG,GAAG;cACpBC,KAAK,EAAED,MAAM,GAAG,GAAG;cACnByC,SAAS,EAAE,QAAQ;cACnBpC,KAAK,EAAE;YACT,CAAC;YACDqC,OAAO,EAAE;cACPC,aAAa,EAAE,QAAQ;cACvBC,UAAU,EAAE,YAAY;cACxBC,cAAc,EAAE,YAAY;cAC5BC,SAAS,EAAE9C,MAAM,GAAG,IAAI;cACxB+C,UAAU,EAAE/C,MAAM,GAAG;YACvB;UACF;QACF;MACF;IAAE,CACL;EAAC,CACE,CAAC;AAEX,CAAC;AAGD,IAAMc,MAAM,GAAGmC,uBAAU,CAACC,MAAM,CAAC;EAC/BnC,SAAS,EAAE;IACToC,IAAI,EAAE;EACR,CAAC;EACD5B,IAAI,EAAE;IACJ6B,SAAS,EAAE,QAAQ;IACnBnD,KAAK,EAAEA,KAAK,GAAG,IAAI;IACnBD,MAAM,EAAEA,MAAM,GAAG,GAAG;IACpBwC,YAAY,EAAE,EAAE;IAChBa,WAAW,EAAE,GAAG;IAChBC,WAAW,EAAE,MAAM;IACnBT,cAAc,EAAE,QAAQ;IACxBD,UAAU,EAAE;EACd,CAAC;EACDxC,IAAI,EAAE;IACJqC,SAAS,EAAE,QAAQ;IACnBc,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBnD,KAAK,EAAE,MAAM;IACbqB,eAAe,EAAE;EACnB;AACF,CAAC,CAAC;AAAC,IAAA+B,QAAA,GAAAC,OAAA,CAAAzC,OAAA,GAIYX,GAAG"},"metadata":{},"sourceType":"script","externalDependencies":[]}