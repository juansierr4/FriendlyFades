{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _isEqual = _interopRequireDefault(require(\"lodash/isEqual\"));\nvar _styles = _interopRequireDefault(require(\"./styles\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _jsxFileName = \"C:\\\\Users\\\\jsier\\\\Desktop\\\\AwesomeProject\\\\node_modules\\\\react-native-deck-swiper\\\\Swiper.js\";\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar _Dimensions$get = _reactNative.Dimensions.get('window'),\n  height = _Dimensions$get.height,\n  width = _Dimensions$get.width;\nvar LABEL_TYPES = {\n  NONE: 'none',\n  LEFT: 'left',\n  RIGHT: 'right',\n  TOP: 'top',\n  BOTTOM: 'bottom'\n};\nvar SWIPE_MULTIPLY_FACTOR = 7;\nvar calculateCardIndexes = function calculateCardIndexes(firstCardIndex, cards) {\n  firstCardIndex = firstCardIndex || 0;\n  var previousCardIndex = firstCardIndex === 0 ? cards.length - 1 : firstCardIndex - 1;\n  var secondCardIndex = firstCardIndex === cards.length - 1 ? 0 : firstCardIndex + 1;\n  return {\n    firstCardIndex: firstCardIndex,\n    secondCardIndex: secondCardIndex,\n    previousCardIndex: previousCardIndex\n  };\n};\nvar rebuildStackAnimatedValues = function rebuildStackAnimatedValues(props) {\n  var stackPositionsAndScales = {};\n  var stackSize = props.stackSize,\n    stackSeparation = props.stackSeparation,\n    stackScale = props.stackScale;\n  for (var position = 0; position < stackSize; position++) {\n    stackPositionsAndScales[`stackPosition${position}`] = new _reactNative.Animated.Value(stackSeparation * position);\n    stackPositionsAndScales[`stackScale${position}`] = new _reactNative.Animated.Value((100 - stackScale * position) * 0.01);\n  }\n  return stackPositionsAndScales;\n};\nvar Swiper = function (_Component) {\n  (0, _inherits2.default)(Swiper, _Component);\n  var _super = _createSuper(Swiper);\n  function Swiper(_props) {\n    var _this;\n    (0, _classCallCheck2.default)(this, Swiper);\n    _this = _super.call(this, _props);\n    _this.shouldComponentUpdate = function (nextProps, nextState) {\n      var _assertThisInitialize = (0, _assertThisInitialized2.default)(_this),\n        props = _assertThisInitialize.props,\n        state = _assertThisInitialize.state;\n      var propsChanged = !(0, _isEqual.default)(props.cards, nextProps.cards) || props.cardIndex !== nextProps.cardIndex;\n      var stateChanged = nextState.firstCardIndex !== state.firstCardIndex || nextState.secondCardIndex !== state.secondCardIndex || nextState.previousCardIndex !== state.previousCardIndex || nextState.labelType !== state.labelType || nextState.swipedAllCards !== state.swipedAllCards;\n      return propsChanged || stateChanged;\n    };\n    _this.componentWillUnmountAfterInteractions = function () {\n      var _this$dimensionsChang;\n      _this.state.pan.x.removeAllListeners();\n      _this.state.pan.y.removeAllListeners();\n      (_this$dimensionsChang = _this.dimensionsChangeSubscription) == null ? void 0 : _this$dimensionsChang.remove();\n    };\n    _this.componentWillUnmount = function () {\n      _this._mounted = false;\n      _reactNative.InteractionManager.runAfterInteractions(_this.componentWillUnmountAfterInteractions.bind((0, _assertThisInitialized2.default)(_this)));\n    };\n    _this.getCardStyle = function () {\n      var _Dimensions$get2 = _reactNative.Dimensions.get('window'),\n        height = _Dimensions$get2.height,\n        width = _Dimensions$get2.width;\n      var _this$props = _this.props,\n        cardVerticalMargin = _this$props.cardVerticalMargin,\n        cardHorizontalMargin = _this$props.cardHorizontalMargin,\n        marginTop = _this$props.marginTop,\n        marginBottom = _this$props.marginBottom;\n      var cardWidth = width - cardHorizontalMargin * 2;\n      var cardHeight = height - cardVerticalMargin * 2 - marginTop - marginBottom;\n      return {\n        top: cardVerticalMargin,\n        left: cardHorizontalMargin,\n        width: cardWidth,\n        height: cardHeight\n      };\n    };\n    _this.initializeCardStyle = function () {\n      _this.dimensionsChangeSubscription = _reactNative.Dimensions.addEventListener('change', _this.onDimensionsChange);\n    };\n    _this.initializePanResponder = function () {\n      _this._panResponder = _reactNative.PanResponder.create({\n        onStartShouldSetPanResponder: function onStartShouldSetPanResponder(event, gestureState) {\n          return true;\n        },\n        onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder(event, gestureState) {\n          return false;\n        },\n        onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture(evt, gestureState) {\n          var isVerticalSwipe = Math.sqrt(Math.pow(gestureState.dx, 2) < Math.pow(gestureState.dy, 2));\n          if (!_this.props.verticalSwipe && isVerticalSwipe) {\n            return false;\n          }\n          return Math.sqrt(Math.pow(gestureState.dx, 2) + Math.pow(gestureState.dy, 2)) > 10;\n        },\n        onPanResponderGrant: _this.onPanResponderGrant,\n        onPanResponderMove: _this.onPanResponderMove,\n        onPanResponderRelease: _this.onPanResponderRelease,\n        onPanResponderTerminate: _this.onPanResponderRelease\n      });\n    };\n    _this.createAnimatedEvent = function () {\n      var _this$props2 = _this.props,\n        horizontalSwipe = _this$props2.horizontalSwipe,\n        verticalSwipe = _this$props2.verticalSwipe;\n      var _this$state$pan = _this.state.pan,\n        x = _this$state$pan.x,\n        y = _this$state$pan.y;\n      var dx = horizontalSwipe ? x : new _reactNative.Animated.Value(0);\n      var dy = verticalSwipe ? y : new _reactNative.Animated.Value(0);\n      return {\n        dx: dx,\n        dy: dy\n      };\n    };\n    _this.onDimensionsChange = function () {\n      _this.forceUpdate();\n    };\n    _this.onPanResponderMove = function (event, gestureState) {\n      _this.props.onSwiping(_this._animatedValueX, _this._animatedValueY);\n      var _this$props3 = _this.props,\n        overlayOpacityHorizontalThreshold = _this$props3.overlayOpacityHorizontalThreshold,\n        overlayOpacityVerticalThreshold = _this$props3.overlayOpacityVerticalThreshold;\n      if (!overlayOpacityHorizontalThreshold) {\n        overlayOpacityHorizontalThreshold = _this.props.horizontalThreshold;\n      }\n      if (!overlayOpacityVerticalThreshold) {\n        overlayOpacityVerticalThreshold = _this.props.verticalThreshold;\n      }\n      var isSwipingLeft, isSwipingRight, isSwipingTop, isSwipingBottom;\n      if (Math.abs(_this._animatedValueX) > Math.abs(_this._animatedValueY) && Math.abs(_this._animatedValueX) > overlayOpacityHorizontalThreshold) {\n        if (_this._animatedValueX > 0) isSwipingRight = true;else isSwipingLeft = true;\n      } else if (Math.abs(_this._animatedValueY) > Math.abs(_this._animatedValueX) && Math.abs(_this._animatedValueY) > overlayOpacityVerticalThreshold) {\n        if (_this._animatedValueY > 0) isSwipingBottom = true;else isSwipingTop = true;\n      }\n      if (isSwipingRight) {\n        _this.setState({\n          labelType: LABEL_TYPES.RIGHT\n        });\n      } else if (isSwipingLeft) {\n        _this.setState({\n          labelType: LABEL_TYPES.LEFT\n        });\n      } else if (isSwipingTop) {\n        _this.setState({\n          labelType: LABEL_TYPES.TOP\n        });\n      } else if (isSwipingBottom) {\n        _this.setState({\n          labelType: LABEL_TYPES.BOTTOM\n        });\n      } else {\n        _this.setState({\n          labelType: LABEL_TYPES.NONE\n        });\n      }\n      var onTapCardDeadZone = _this.props.onTapCardDeadZone;\n      if (_this._animatedValueX < -onTapCardDeadZone || _this._animatedValueX > onTapCardDeadZone || _this._animatedValueY < -onTapCardDeadZone || _this._animatedValueY > onTapCardDeadZone) {\n        _this.setState({\n          slideGesture: true\n        });\n      }\n      return _reactNative.Animated.event([null, _this.createAnimatedEvent()], {\n        useNativeDriver: false\n      })(event, gestureState);\n    };\n    _this.onPanResponderGrant = function (event, gestureState) {\n      _this.props.dragStart && _this.props.dragStart();\n      if (!_this.state.panResponderLocked) {\n        _this.state.pan.setOffset({\n          x: _this._animatedValueX,\n          y: _this._animatedValueY\n        });\n      }\n      _this.state.pan.setValue({\n        x: 0,\n        y: 0\n      });\n    };\n    _this.validPanResponderRelease = function () {\n      var _this$props4 = _this.props,\n        disableBottomSwipe = _this$props4.disableBottomSwipe,\n        disableLeftSwipe = _this$props4.disableLeftSwipe,\n        disableRightSwipe = _this$props4.disableRightSwipe,\n        disableTopSwipe = _this$props4.disableTopSwipe;\n      var _this$getSwipeDirecti = _this.getSwipeDirection(_this._animatedValueX, _this._animatedValueY),\n        isSwipingLeft = _this$getSwipeDirecti.isSwipingLeft,\n        isSwipingRight = _this$getSwipeDirecti.isSwipingRight,\n        isSwipingTop = _this$getSwipeDirecti.isSwipingTop,\n        isSwipingBottom = _this$getSwipeDirecti.isSwipingBottom;\n      return isSwipingLeft && !disableLeftSwipe || isSwipingRight && !disableRightSwipe || isSwipingTop && !disableTopSwipe || isSwipingBottom && !disableBottomSwipe;\n    };\n    _this.onPanResponderRelease = function (e, gestureState) {\n      _this.props.dragEnd && _this.props.dragEnd();\n      if (_this.state.panResponderLocked) {\n        _this.state.pan.setValue({\n          x: 0,\n          y: 0\n        });\n        _this.state.pan.setOffset({\n          x: 0,\n          y: 0\n        });\n        return;\n      }\n      var _this$props5 = _this.props,\n        horizontalThreshold = _this$props5.horizontalThreshold,\n        verticalThreshold = _this$props5.verticalThreshold;\n      var animatedValueX = Math.abs(_this._animatedValueX);\n      var animatedValueY = Math.abs(_this._animatedValueY);\n      var isSwiping = animatedValueX > horizontalThreshold || animatedValueY > verticalThreshold;\n      if (isSwiping && _this.validPanResponderRelease()) {\n        var onSwipeDirectionCallback = _this.getOnSwipeDirectionCallback(_this._animatedValueX, _this._animatedValueY);\n        _this.swipeCard(onSwipeDirectionCallback);\n      } else {\n        _this.resetTopCard();\n      }\n      if (!_this.state.slideGesture) {\n        _this.props.onTapCard(_this.state.firstCardIndex);\n      }\n      _this.setState({\n        labelType: LABEL_TYPES.NONE,\n        slideGesture: false\n      });\n    };\n    _this.getOnSwipeDirectionCallback = function (animatedValueX, animatedValueY) {\n      var _this$props6 = _this.props,\n        onSwipedLeft = _this$props6.onSwipedLeft,\n        onSwipedRight = _this$props6.onSwipedRight,\n        onSwipedTop = _this$props6.onSwipedTop,\n        onSwipedBottom = _this$props6.onSwipedBottom;\n      var _this$getSwipeDirecti2 = _this.getSwipeDirection(animatedValueX, animatedValueY),\n        isSwipingLeft = _this$getSwipeDirecti2.isSwipingLeft,\n        isSwipingRight = _this$getSwipeDirecti2.isSwipingRight,\n        isSwipingTop = _this$getSwipeDirecti2.isSwipingTop,\n        isSwipingBottom = _this$getSwipeDirecti2.isSwipingBottom;\n      if (isSwipingRight) {\n        return onSwipedRight;\n      }\n      if (isSwipingLeft) {\n        return onSwipedLeft;\n      }\n      if (isSwipingTop) {\n        return onSwipedTop;\n      }\n      if (isSwipingBottom) {\n        return onSwipedBottom;\n      }\n    };\n    _this.mustDecrementCardIndex = function (animatedValueX, animatedValueY) {\n      var _this$getSwipeDirecti3 = _this.getSwipeDirection(animatedValueX, animatedValueY),\n        isSwipingLeft = _this$getSwipeDirecti3.isSwipingLeft,\n        isSwipingRight = _this$getSwipeDirecti3.isSwipingRight,\n        isSwipingTop = _this$getSwipeDirecti3.isSwipingTop,\n        isSwipingBottom = _this$getSwipeDirecti3.isSwipingBottom;\n      return isSwipingLeft && _this.props.goBackToPreviousCardOnSwipeLeft || isSwipingRight && _this.props.goBackToPreviousCardOnSwipeRight || isSwipingTop && _this.props.goBackToPreviousCardOnSwipeTop || isSwipingBottom && _this.props.goBackToPreviousCardOnSwipeBottom;\n    };\n    _this.getSwipeDirection = function (animatedValueX, animatedValueY) {\n      var isSwipingLeft = animatedValueX < -_this.props.horizontalThreshold;\n      var isSwipingRight = animatedValueX > _this.props.horizontalThreshold;\n      var isSwipingTop = animatedValueY < -_this.props.verticalThreshold;\n      var isSwipingBottom = animatedValueY > _this.props.verticalThreshold;\n      return {\n        isSwipingLeft: isSwipingLeft,\n        isSwipingRight: isSwipingRight,\n        isSwipingTop: isSwipingTop,\n        isSwipingBottom: isSwipingBottom\n      };\n    };\n    _this.resetTopCard = function (cb) {\n      _reactNative.Animated.spring(_this.state.pan, {\n        toValue: 0,\n        friction: _this.props.topCardResetAnimationFriction,\n        tension: _this.props.topCardResetAnimationTension,\n        useNativeDriver: true\n      }).start(cb);\n      _this.state.pan.setOffset({\n        x: 0,\n        y: 0\n      });\n      _this.props.onSwipedAborted();\n    };\n    _this.swipeBack = function (cb) {\n      var _this$state = _this.state,\n        swipeBackXYPositions = _this$state.swipeBackXYPositions,\n        isSwipingBack = _this$state.isSwipingBack;\n      var infinite = _this.props.infinite;\n      var canSwipeBack = !isSwipingBack && (swipeBackXYPositions.length > 0 || infinite);\n      if (!canSwipeBack) {\n        return;\n      }\n      _this.setState({\n        isSwipingBack: !isSwipingBack,\n        swipeBackXYPositions: swipeBackXYPositions\n      }, function () {\n        _this.animatePreviousCard(_this.calculateNextPreviousCardPosition(), cb);\n      });\n    };\n    _this.swipeLeft = function () {\n      var mustDecrementCardIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      _this.swipeCard(_this.props.onSwipedLeft, -_this.props.horizontalThreshold, 0, mustDecrementCardIndex);\n    };\n    _this.swipeRight = function () {\n      var mustDecrementCardIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      _this.swipeCard(_this.props.onSwipedRight, _this.props.horizontalThreshold, 0, mustDecrementCardIndex);\n    };\n    _this.swipeTop = function () {\n      var mustDecrementCardIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      _this.swipeCard(_this.props.onSwipedTop, 0, -_this.props.verticalThreshold, mustDecrementCardIndex);\n    };\n    _this.swipeBottom = function () {\n      var mustDecrementCardIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      _this.swipeCard(_this.props.onSwipedBottom, 0, _this.props.verticalThreshold, mustDecrementCardIndex);\n    };\n    _this.swipeCard = function (onSwiped) {\n      var x = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this._animatedValueX;\n      var y = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _this._animatedValueY;\n      var mustDecrementCardIndex = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      _this.setState({\n        panResponderLocked: true\n      });\n      _this.animateStack();\n      _reactNative.Animated.timing(_this.state.pan, {\n        toValue: {\n          x: x * SWIPE_MULTIPLY_FACTOR,\n          y: y * SWIPE_MULTIPLY_FACTOR\n        },\n        duration: _this.props.swipeAnimationDuration,\n        useNativeDriver: true\n      }).start(function () {\n        _this.setSwipeBackCardXY(x, y, function () {\n          mustDecrementCardIndex = mustDecrementCardIndex ? true : _this.mustDecrementCardIndex(_this._animatedValueX, _this._animatedValueY);\n          if (mustDecrementCardIndex) {\n            _this.decrementCardIndex(onSwiped);\n          } else {\n            _this.incrementCardIndex(onSwiped);\n          }\n        });\n      });\n    };\n    _this.setSwipeBackCardXY = function () {\n      var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -width;\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var cb = arguments.length > 2 ? arguments[2] : undefined;\n      _this.setState({\n        swipeBackXYPositions: [].concat((0, _toConsumableArray2.default)(_this.state.swipeBackXYPositions), [{\n          x: x,\n          y: y\n        }])\n      }, cb);\n    };\n    _this.animatePreviousCard = function (_ref, cb) {\n      var x = _ref.x,\n        y = _ref.y;\n      var _this$state2 = _this.state,\n        previousCardX = _this$state2.previousCardX,\n        previousCardY = _this$state2.previousCardY;\n      previousCardX.setValue(x * SWIPE_MULTIPLY_FACTOR);\n      previousCardY.setValue(y * SWIPE_MULTIPLY_FACTOR);\n      _reactNative.Animated.parallel([_reactNative.Animated.spring(_this.state.previousCardX, {\n        toValue: 0,\n        friction: _this.props.stackAnimationFriction,\n        tension: _this.props.stackAnimationTension,\n        useNativeDriver: true\n      }), _reactNative.Animated.spring(_this.state.previousCardY, {\n        toValue: 0,\n        friction: _this.props.stackAnimationFriction,\n        tension: _this.props.stackAnimationTension,\n        useNativeDriver: true\n      })]).start(function () {\n        _this.setState({\n          isSwipingBack: false\n        });\n        _this.decrementCardIndex(cb);\n      });\n    };\n    _this.animateStack = function () {\n      var _this$state3 = _this.state,\n        secondCardIndex = _this$state3.secondCardIndex,\n        swipedAllCards = _this$state3.swipedAllCards;\n      var _this$props7 = _this.props,\n        stackSize = _this$props7.stackSize,\n        infinite = _this$props7.infinite,\n        showSecondCard = _this$props7.showSecondCard,\n        cards = _this$props7.cards;\n      var index = secondCardIndex;\n      while (stackSize-- > 1 && showSecondCard && !swipedAllCards) {\n        if (_this.state[`stackPosition${stackSize}`] && _this.state[`stackScale${stackSize}`]) {\n          var newSeparation = _this.props.stackSeparation * (stackSize - 1);\n          var newScale = (100 - _this.props.stackScale * (stackSize - 1)) * 0.01;\n          _reactNative.Animated.parallel([_reactNative.Animated.spring(_this.state[`stackPosition${stackSize}`], {\n            toValue: newSeparation,\n            friction: _this.props.stackAnimationFriction,\n            tension: _this.props.stackAnimationTension,\n            useNativeDriver: true\n          }), _reactNative.Animated.spring(_this.state[`stackScale${stackSize}`], {\n            toValue: newScale,\n            friction: _this.props.stackAnimationFriction,\n            tension: _this.props.stackAnimationTension,\n            useNativeDriver: true\n          })]).start();\n        }\n        if (index === cards.length - 1) {\n          if (!infinite) break;\n          index = 0;\n        } else {\n          index++;\n        }\n      }\n    };\n    _this.incrementCardIndex = function (onSwiped) {\n      var firstCardIndex = _this.state.firstCardIndex;\n      var infinite = _this.props.infinite;\n      var newCardIndex = firstCardIndex + 1;\n      var swipedAllCards = false;\n      _this.onSwipedCallbacks(onSwiped);\n      var allSwipedCheck = function allSwipedCheck() {\n        return newCardIndex === _this.props.cards.length;\n      };\n      if (allSwipedCheck()) {\n        if (!infinite) {\n          _this.props.onSwipedAll();\n          if (allSwipedCheck()) {\n            swipedAllCards = true;\n          }\n        } else {\n          newCardIndex = 0;\n        }\n      }\n      _this.setCardIndex(newCardIndex, swipedAllCards);\n    };\n    _this.decrementCardIndex = function (cb) {\n      var firstCardIndex = _this.state.firstCardIndex;\n      var lastCardIndex = _this.props.cards.length - 1;\n      var previousCardIndex = firstCardIndex - 1;\n      var newCardIndex = firstCardIndex === 0 ? lastCardIndex : previousCardIndex;\n      _this.onSwipedCallbacks(cb);\n      _this.setCardIndex(newCardIndex, false);\n    };\n    _this.jumpToCardIndex = function (newCardIndex) {\n      if (_this.props.cards[newCardIndex]) {\n        _this.setCardIndex(newCardIndex, false);\n      }\n    };\n    _this.rebuildStackValues = function () {\n      var stackPositionsAndScales = {};\n      var _this$props8 = _this.props,\n        stackSize = _this$props8.stackSize,\n        stackSeparation = _this$props8.stackSeparation,\n        stackScale = _this$props8.stackScale;\n      for (var position = 0; position < stackSize; position++) {\n        stackPositionsAndScales[`stackPosition${position}`] = new _reactNative.Animated.Value(stackSeparation * position);\n        stackPositionsAndScales[`stackScale${position}`] = new _reactNative.Animated.Value((100 - stackScale * position) * 0.01);\n      }\n      return stackPositionsAndScales;\n    };\n    _this.onSwipedCallbacks = function (swipeDirectionCallback) {\n      var previousCardIndex = _this.state.firstCardIndex;\n      _this.props.onSwiped(previousCardIndex, _this.props.cards[previousCardIndex]);\n      _this.setState(_this.rebuildStackValues);\n      if (swipeDirectionCallback) {\n        swipeDirectionCallback(previousCardIndex, _this.props.cards[previousCardIndex]);\n      }\n    };\n    _this.setCardIndex = function (newCardIndex, swipedAllCards) {\n      if (_this._mounted) {\n        _this.setState(Object.assign({}, calculateCardIndexes(newCardIndex, _this.props.cards), {\n          swipedAllCards: swipedAllCards,\n          panResponderLocked: false\n        }), _this.resetPanAndScale);\n      }\n    };\n    _this.resetPanAndScale = function () {\n      var _this$props9 = _this.props,\n        previousCardDefaultPositionX = _this$props9.previousCardDefaultPositionX,\n        previousCardDefaultPositionY = _this$props9.previousCardDefaultPositionY;\n      _this.state.pan.setValue({\n        x: 0,\n        y: 0\n      });\n      _this.state.pan.setOffset({\n        x: 0,\n        y: 0\n      });\n      _this._animatedValueX = 0;\n      _this._animatedValueY = 0;\n      _this.state.previousCardX.setValue(previousCardDefaultPositionX);\n      _this.state.previousCardY.setValue(previousCardDefaultPositionY);\n      _this.state.pan.x.addListener(function (value) {\n        return _this._animatedValueX = value.value;\n      });\n      _this.state.pan.y.addListener(function (value) {\n        return _this._animatedValueY = value.value;\n      });\n    };\n    _this.calculateNextPreviousCardPosition = function () {\n      var swipeBackXYPositions = _this.state.swipeBackXYPositions;\n      var _this$props10 = _this.props,\n        x = _this$props10.previousCardDefaultPositionX,\n        y = _this$props10.previousCardDefaultPositionY;\n      var swipeBackPosition = swipeBackXYPositions.splice(-1, 1);\n      if (swipeBackPosition[0]) {\n        x = swipeBackPosition[0].x;\n        y = swipeBackPosition[0].y;\n      }\n      return {\n        x: x,\n        y: y\n      };\n    };\n    _this.calculateOverlayLabelStyle = function () {\n      var dynamicStyle = _this.props.overlayLabels[_this.state.labelType].style;\n      var overlayLabelStyle = dynamicStyle ? dynamicStyle.label : {};\n      if (_this.state.labelType === LABEL_TYPES.NONE) {\n        overlayLabelStyle = _styles.default.hideOverlayLabel;\n      }\n      return [_this.props.overlayLabelStyle, overlayLabelStyle];\n    };\n    _this.calculateOverlayLabelWrapperStyle = function () {\n      var dynamicStyle = _this.props.overlayLabels[_this.state.labelType].style;\n      var dynamicWrapperStyle = dynamicStyle ? dynamicStyle.wrapper : {};\n      var opacity = _this.props.animateOverlayLabelsOpacity ? _this.interpolateOverlayLabelsOpacity() : 1;\n      return [_this.props.overlayLabelWrapperStyle, dynamicWrapperStyle, {\n        opacity: opacity\n      }];\n    };\n    _this.calculateSwipableCardStyle = function () {\n      var opacity = _this.props.animateCardOpacity ? _this.interpolateCardOpacity() : 1;\n      var rotation = _this.interpolateRotation();\n      return [_styles.default.card, _this.getCardStyle(), {\n        zIndex: 1,\n        opacity: opacity,\n        transform: [{\n          translateX: _this.state.pan.x\n        }, {\n          translateY: _this.state.pan.y\n        }, {\n          rotate: rotation\n        }]\n      }, _this.props.cardStyle];\n    };\n    _this.calculateStackCardZoomStyle = function (position) {\n      return [_styles.default.card, _this.getCardStyle(), {\n        zIndex: position * -1,\n        transform: [{\n          scale: _this.state[`stackScale${position}`]\n        }, {\n          translateY: _this.state[`stackPosition${position}`]\n        }]\n      }, _this.props.cardStyle];\n    };\n    _this.calculateSwipeBackCardStyle = function () {\n      return [_styles.default.card, _this.getCardStyle(), {\n        zIndex: 4,\n        transform: [{\n          translateX: _this.state.previousCardX\n        }, {\n          translateY: _this.state.previousCardY\n        }]\n      }, _this.props.cardStyle];\n    };\n    _this.interpolateCardOpacity = function () {\n      var animatedValueX = Math.abs(_this._animatedValueX);\n      var animatedValueY = Math.abs(_this._animatedValueY);\n      var opacity;\n      if (animatedValueX > animatedValueY) {\n        opacity = _this.state.pan.x.interpolate({\n          inputRange: _this.props.inputCardOpacityRangeX,\n          outputRange: _this.props.outputCardOpacityRangeX\n        });\n      } else {\n        opacity = _this.state.pan.y.interpolate({\n          inputRange: _this.props.inputCardOpacityRangeY,\n          outputRange: _this.props.outputCardOpacityRangeY\n        });\n      }\n      return opacity;\n    };\n    _this.interpolateOverlayLabelsOpacity = function () {\n      var animatedValueX = Math.abs(_this._animatedValueX);\n      var animatedValueY = Math.abs(_this._animatedValueY);\n      var opacity;\n      if (animatedValueX > animatedValueY) {\n        opacity = _this.state.pan.x.interpolate({\n          inputRange: _this.props.inputOverlayLabelsOpacityRangeX,\n          outputRange: _this.props.outputOverlayLabelsOpacityRangeX\n        });\n      } else {\n        opacity = _this.state.pan.y.interpolate({\n          inputRange: _this.props.inputOverlayLabelsOpacityRangeY,\n          outputRange: _this.props.outputOverlayLabelsOpacityRangeY\n        });\n      }\n      return opacity;\n    };\n    _this.interpolateRotation = function () {\n      return _this.state.pan.x.interpolate({\n        inputRange: _this.props.inputRotationRange,\n        outputRange: _this.props.outputRotationRange\n      });\n    };\n    _this.render = function () {\n      var _this$props11 = _this.props,\n        pointerEvents = _this$props11.pointerEvents,\n        backgroundColor = _this$props11.backgroundColor,\n        marginTop = _this$props11.marginTop,\n        marginBottom = _this$props11.marginBottom,\n        containerStyle = _this$props11.containerStyle,\n        swipeBackCard = _this$props11.swipeBackCard,\n        testID = _this$props11.testID;\n      return (0, _jsxRuntime.jsxs)(_reactNative.View, {\n        pointerEvents: pointerEvents,\n        testID: testID,\n        style: [_styles.default.container, {\n          backgroundColor: backgroundColor,\n          marginTop: marginTop,\n          marginBottom: marginBottom\n        }, containerStyle],\n        children: [_this.renderChildren(), swipeBackCard ? _this.renderSwipeBackCard() : null, _this.renderStack()]\n      });\n    };\n    _this.renderChildren = function () {\n      var _this$props12 = _this.props,\n        childrenOnTop = _this$props12.childrenOnTop,\n        children = _this$props12.children,\n        stackSize = _this$props12.stackSize,\n        showSecondCard = _this$props12.showSecondCard;\n      var zIndex = stackSize && showSecondCard ? stackSize * -1 : 1;\n      if (childrenOnTop) {\n        zIndex = 5;\n      }\n      return (0, _jsxRuntime.jsx)(_reactNative.View, {\n        pointerEvents: \"box-none\",\n        style: [_styles.default.childrenViewStyle, {\n          zIndex: zIndex\n        }],\n        children: children\n      });\n    };\n    _this.getCardKey = function (cardContent, cardIndex) {\n      var keyExtractor = _this.props.keyExtractor;\n      if (keyExtractor) {\n        return keyExtractor(cardContent);\n      }\n      return cardIndex;\n    };\n    _this.pushCardToStack = function (renderedCards, index, position, key, firstCard) {\n      var cards = _this.props.cards;\n      var stackCardZoomStyle = _this.calculateStackCardZoomStyle(position);\n      var stackCard = _this.props.renderCard(cards[index], index);\n      var swipableCardStyle = _this.calculateSwipableCardStyle();\n      var renderOverlayLabel = _this.renderOverlayLabel();\n      renderedCards.push((0, _jsxRuntime.jsxs)(_reactNative.Animated.View, Object.assign({\n        style: firstCard ? swipableCardStyle : stackCardZoomStyle\n      }, _this._panResponder.panHandlers, {\n        children: [firstCard ? renderOverlayLabel : null, stackCard]\n      }), key));\n    };\n    _this.renderStack = function () {\n      var _this$state4 = _this.state,\n        firstCardIndex = _this$state4.firstCardIndex,\n        swipedAllCards = _this$state4.swipedAllCards;\n      var cards = _this.props.cards;\n      var renderedCards = [];\n      var _this$props13 = _this.props,\n        stackSize = _this$props13.stackSize,\n        infinite = _this$props13.infinite,\n        showSecondCard = _this$props13.showSecondCard;\n      var index = firstCardIndex;\n      var firstCard = true;\n      var cardPosition = 0;\n      while (stackSize-- > 0 && (firstCard || showSecondCard) && !swipedAllCards) {\n        var key = _this.getCardKey(cards[index], index);\n        _this.pushCardToStack(renderedCards, index, cardPosition, key, firstCard);\n        firstCard = false;\n        if (index === cards.length - 1) {\n          if (!infinite) break;\n          index = 0;\n        } else {\n          index++;\n        }\n        cardPosition++;\n      }\n      return renderedCards;\n    };\n    _this.renderSwipeBackCard = function () {\n      var previousCardIndex = _this.state.previousCardIndex;\n      var cards = _this.props.cards;\n      var previousCardStyle = _this.calculateSwipeBackCardStyle();\n      var previousCard = _this.props.renderCard(cards[previousCardIndex], previousCardIndex);\n      var key = _this.getCardKey(cards[previousCardIndex], previousCardIndex);\n      return (0, _jsxRuntime.jsx)(_reactNative.Animated.View, {\n        style: previousCardStyle,\n        children: previousCard\n      }, key);\n    };\n    _this.renderOverlayLabel = function () {\n      var _this$props14 = _this.props,\n        disableBottomSwipe = _this$props14.disableBottomSwipe,\n        disableLeftSwipe = _this$props14.disableLeftSwipe,\n        disableRightSwipe = _this$props14.disableRightSwipe,\n        disableTopSwipe = _this$props14.disableTopSwipe,\n        overlayLabels = _this$props14.overlayLabels;\n      var labelType = _this.state.labelType;\n      var labelTypeNone = labelType === LABEL_TYPES.NONE;\n      var directionSwipeLabelDisabled = labelType === LABEL_TYPES.BOTTOM && disableBottomSwipe || labelType === LABEL_TYPES.LEFT && disableLeftSwipe || labelType === LABEL_TYPES.RIGHT && disableRightSwipe || labelType === LABEL_TYPES.TOP && disableTopSwipe;\n      if (!overlayLabels || !overlayLabels[labelType] || labelTypeNone || directionSwipeLabelDisabled) {\n        return null;\n      }\n      return (0, _jsxRuntime.jsxs)(_reactNative.Animated.View, {\n        style: _this.calculateOverlayLabelWrapperStyle(),\n        children: [!overlayLabels[labelType].element && (0, _jsxRuntime.jsx)(_reactNative.Text, {\n          style: _this.calculateOverlayLabelStyle(),\n          children: overlayLabels[labelType].title\n        }), overlayLabels[labelType].element && overlayLabels[labelType].element]\n      });\n    };\n    _this.state = Object.assign({}, calculateCardIndexes(_props.cardIndex, _props.cards), {\n      pan: new _reactNative.Animated.ValueXY(),\n      previousCardX: new _reactNative.Animated.Value(_props.previousCardDefaultPositionX),\n      previousCardY: new _reactNative.Animated.Value(_props.previousCardDefaultPositionY),\n      swipedAllCards: false,\n      panResponderLocked: false,\n      labelType: LABEL_TYPES.NONE,\n      slideGesture: false,\n      swipeBackXYPositions: [],\n      isSwipingBack: false\n    }, rebuildStackAnimatedValues(_props));\n    _this._mounted = true;\n    _this._animatedValueX = 0;\n    _this._animatedValueY = 0;\n    _this.state.pan.x.addListener(function (value) {\n      return _this._animatedValueX = value.value;\n    });\n    _this.state.pan.y.addListener(function (value) {\n      return _this._animatedValueY = value.value;\n    });\n    _this.initializeCardStyle();\n    _this.initializePanResponder();\n    return _this;\n  }\n  return (0, _createClass2.default)(Swiper);\n}(_react.Component);\nSwiper.propTypes = {\n  animateCardOpacity: _propTypes.default.bool,\n  animateOverlayLabelsOpacity: _propTypes.default.bool,\n  backgroundColor: _propTypes.default.string,\n  cardHorizontalMargin: _propTypes.default.number,\n  cardIndex: _propTypes.default.number,\n  cardStyle: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.object]),\n  cardVerticalMargin: _propTypes.default.number,\n  cards: _propTypes.default.oneOfType([_propTypes.default.array, _propTypes.default.object]).isRequired,\n  containerStyle: _propTypes.default.object,\n  children: _propTypes.default.any,\n  childrenOnTop: _propTypes.default.bool,\n  dragEnd: _propTypes.default.func,\n  dragStart: _propTypes.default.func,\n  disableBottomSwipe: _propTypes.default.bool,\n  disableLeftSwipe: _propTypes.default.bool,\n  disableRightSwipe: _propTypes.default.bool,\n  disableTopSwipe: _propTypes.default.bool,\n  goBackToPreviousCardOnSwipeBottom: _propTypes.default.bool,\n  goBackToPreviousCardOnSwipeLeft: _propTypes.default.bool,\n  goBackToPreviousCardOnSwipeRight: _propTypes.default.bool,\n  goBackToPreviousCardOnSwipeTop: _propTypes.default.bool,\n  horizontalSwipe: _propTypes.default.bool,\n  horizontalThreshold: _propTypes.default.number,\n  infinite: _propTypes.default.bool,\n  inputCardOpacityRangeX: _propTypes.default.array,\n  inputCardOpacityRangeY: _propTypes.default.array,\n  inputOverlayLabelsOpacityRangeX: _propTypes.default.array,\n  inputOverlayLabelsOpacityRangeY: _propTypes.default.array,\n  inputCardOpacityRange: _propTypes.default.array,\n  inputRotationRange: _propTypes.default.array,\n  keyExtractor: _propTypes.default.func,\n  marginBottom: _propTypes.default.number,\n  marginTop: _propTypes.default.number,\n  onSwiped: _propTypes.default.func,\n  onSwipedAborted: _propTypes.default.func,\n  onSwipedAll: _propTypes.default.func,\n  onSwipedBottom: _propTypes.default.func,\n  onSwipedLeft: _propTypes.default.func,\n  onSwipedRight: _propTypes.default.func,\n  onSwipedTop: _propTypes.default.func,\n  onSwiping: _propTypes.default.func,\n  onTapCard: _propTypes.default.func,\n  onTapCardDeadZone: _propTypes.default.number,\n  outputCardOpacityRangeX: _propTypes.default.array,\n  outputCardOpacityRangeY: _propTypes.default.array,\n  outputOverlayLabelsOpacityRangeX: _propTypes.default.array,\n  outputOverlayLabelsOpacityRangeY: _propTypes.default.array,\n  outputRotationRange: _propTypes.default.array,\n  outputCardOpacityRange: _propTypes.default.array,\n  overlayLabels: _propTypes.default.object,\n  overlayLabelStyle: _propTypes.default.object,\n  overlayLabelWrapperStyle: _propTypes.default.object,\n  overlayOpacityHorizontalThreshold: _propTypes.default.number,\n  overlayOpacityVerticalThreshold: _propTypes.default.number,\n  pointerEvents: _propTypes.default.oneOf(['box-none', 'none', 'box-only', 'auto']),\n  previousCardDefaultPositionX: _propTypes.default.number,\n  previousCardDefaultPositionY: _propTypes.default.number,\n  renderCard: _propTypes.default.func.isRequired,\n  secondCardZoom: _propTypes.default.number,\n  showSecondCard: _propTypes.default.bool,\n  stackAnimationFriction: _propTypes.default.number,\n  stackAnimationTension: _propTypes.default.number,\n  stackScale: _propTypes.default.number,\n  stackSeparation: _propTypes.default.number,\n  stackSize: _propTypes.default.number,\n  swipeAnimationDuration: _propTypes.default.number,\n  swipeBackCard: _propTypes.default.bool,\n  testID: _propTypes.default.string,\n  topCardResetAnimationFriction: _propTypes.default.number,\n  topCardResetAnimationTension: _propTypes.default.number,\n  verticalSwipe: _propTypes.default.bool,\n  verticalThreshold: _propTypes.default.number,\n  zoomAnimationDuration: _propTypes.default.number,\n  zoomFriction: _propTypes.default.number\n};\nSwiper.defaultProps = {\n  animateCardOpacity: false,\n  animateOverlayLabelsOpacity: false,\n  backgroundColor: '#4FD0E9',\n  cardHorizontalMargin: 20,\n  cardIndex: 0,\n  cardStyle: {},\n  cardVerticalMargin: 60,\n  childrenOnTop: false,\n  containerStyle: {},\n  disableBottomSwipe: false,\n  disableLeftSwipe: false,\n  disableRightSwipe: false,\n  disableTopSwipe: false,\n  horizontalSwipe: true,\n  horizontalThreshold: width / 4,\n  goBackToPreviousCardOnSwipeBottom: false,\n  goBackToPreviousCardOnSwipeLeft: false,\n  goBackToPreviousCardOnSwipeRight: false,\n  goBackToPreviousCardOnSwipeTop: false,\n  infinite: false,\n  inputCardOpacityRangeX: [-width / 2, -width / 3, 0, width / 3, width / 2],\n  inputCardOpacityRangeY: [-height / 2, -height / 3, 0, height / 3, height / 2],\n  inputOverlayLabelsOpacityRangeX: [-width / 3, -width / 4, 0, width / 4, width / 3],\n  inputOverlayLabelsOpacityRangeY: [-height / 4, -height / 5, 0, height / 5, height / 4],\n  inputRotationRange: [-width / 2, 0, width / 2],\n  keyExtractor: null,\n  marginBottom: 0,\n  marginTop: 0,\n  onSwiped: function onSwiped(cardIndex) {},\n  onSwipedAborted: function onSwipedAborted() {},\n  onSwipedAll: function onSwipedAll() {},\n  onSwipedBottom: function onSwipedBottom(cardIndex) {},\n  onSwipedLeft: function onSwipedLeft(cardIndex) {},\n  onSwipedRight: function onSwipedRight(cardIndex) {},\n  onSwipedTop: function onSwipedTop(cardIndex) {},\n  onSwiping: function onSwiping() {},\n  onTapCard: function onTapCard(cardIndex) {},\n  onTapCardDeadZone: 5,\n  outputCardOpacityRangeX: [0.8, 1, 1, 1, 0.8],\n  outputCardOpacityRangeY: [0.8, 1, 1, 1, 0.8],\n  outputOverlayLabelsOpacityRangeX: [1, 0, 0, 0, 1],\n  outputOverlayLabelsOpacityRangeY: [1, 0, 0, 0, 1],\n  outputRotationRange: ['-10deg', '0deg', '10deg'],\n  overlayLabels: null,\n  overlayLabelStyle: {\n    fontSize: 45,\n    fontWeight: 'bold',\n    borderRadius: 10,\n    padding: 10,\n    overflow: 'hidden'\n  },\n  overlayLabelWrapperStyle: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n    zIndex: 2,\n    flex: 1,\n    width: '100%',\n    height: '100%'\n  },\n  overlayOpacityHorizontalThreshold: width / 4,\n  overlayOpacityVerticalThreshold: height / 5,\n  pointerEvents: 'auto',\n  previousCardDefaultPositionX: -width,\n  previousCardDefaultPositionY: -height,\n  secondCardZoom: 0.97,\n  showSecondCard: true,\n  stackAnimationFriction: 7,\n  stackAnimationTension: 40,\n  stackScale: 3,\n  stackSeparation: 10,\n  stackSize: 1,\n  swipeAnimationDuration: 350,\n  swipeBackCard: false,\n  topCardResetAnimationFriction: 7,\n  topCardResetAnimationTension: 40,\n  verticalSwipe: true,\n  verticalThreshold: height / 5,\n  zoomAnimationDuration: 100,\n  zoomFriction: 7\n};\nvar _default = exports.default = Swiper;","map":{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_propTypes","_interopRequireDefault","_isEqual","_styles","_jsxRuntime","_jsxFileName","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Boolean","valueOf","_Dimensions$get","Dimensions","height","width","LABEL_TYPES","NONE","LEFT","RIGHT","TOP","BOTTOM","SWIPE_MULTIPLY_FACTOR","calculateCardIndexes","firstCardIndex","cards","previousCardIndex","length","secondCardIndex","rebuildStackAnimatedValues","props","stackPositionsAndScales","stackSize","stackSeparation","stackScale","position","Animated","Value","Swiper","_Component","_inherits2","_super","_this","_classCallCheck2","shouldComponentUpdate","nextProps","nextState","_assertThisInitialize","_assertThisInitialized2","state","propsChanged","isEqual","cardIndex","stateChanged","labelType","swipedAllCards","componentWillUnmountAfterInteractions","_this$dimensionsChang","pan","x","removeAllListeners","y","dimensionsChangeSubscription","remove","componentWillUnmount","_mounted","InteractionManager","runAfterInteractions","bind","getCardStyle","_Dimensions$get2","_this$props","cardVerticalMargin","cardHorizontalMargin","marginTop","marginBottom","cardWidth","cardHeight","top","left","initializeCardStyle","addEventListener","onDimensionsChange","initializePanResponder","_panResponder","PanResponder","create","onStartShouldSetPanResponder","event","gestureState","onMoveShouldSetPanResponder","onMoveShouldSetPanResponderCapture","evt","isVerticalSwipe","Math","sqrt","pow","dx","dy","verticalSwipe","onPanResponderGrant","onPanResponderMove","onPanResponderRelease","onPanResponderTerminate","createAnimatedEvent","_this$props2","horizontalSwipe","_this$state$pan","forceUpdate","onSwiping","_animatedValueX","_animatedValueY","_this$props3","overlayOpacityHorizontalThreshold","overlayOpacityVerticalThreshold","horizontalThreshold","verticalThreshold","isSwipingLeft","isSwipingRight","isSwipingTop","isSwipingBottom","abs","setState","onTapCardDeadZone","slideGesture","useNativeDriver","dragStart","panResponderLocked","setOffset","setValue","validPanResponderRelease","_this$props4","disableBottomSwipe","disableLeftSwipe","disableRightSwipe","disableTopSwipe","_this$getSwipeDirecti","getSwipeDirection","dragEnd","_this$props5","animatedValueX","animatedValueY","isSwiping","onSwipeDirectionCallback","getOnSwipeDirectionCallback","swipeCard","resetTopCard","onTapCard","_this$props6","onSwipedLeft","onSwipedRight","onSwipedTop","onSwipedBottom","_this$getSwipeDirecti2","mustDecrementCardIndex","_this$getSwipeDirecti3","goBackToPreviousCardOnSwipeLeft","goBackToPreviousCardOnSwipeRight","goBackToPreviousCardOnSwipeTop","goBackToPreviousCardOnSwipeBottom","cb","spring","toValue","friction","topCardResetAnimationFriction","tension","topCardResetAnimationTension","start","onSwipedAborted","swipeBack","_this$state","swipeBackXYPositions","isSwipingBack","infinite","canSwipeBack","animatePreviousCard","calculateNextPreviousCardPosition","swipeLeft","undefined","swipeRight","swipeTop","swipeBottom","onSwiped","animateStack","timing","duration","swipeAnimationDuration","setSwipeBackCardXY","decrementCardIndex","incrementCardIndex","concat","_toConsumableArray2","_ref","_this$state2","previousCardX","previousCardY","parallel","stackAnimationFriction","stackAnimationTension","_this$state3","_this$props7","showSecondCard","index","newSeparation","newScale","newCardIndex","onSwipedCallbacks","allSwipedCheck","onSwipedAll","setCardIndex","lastCardIndex","jumpToCardIndex","rebuildStackValues","_this$props8","swipeDirectionCallback","assign","resetPanAndScale","_this$props9","previousCardDefaultPositionX","previousCardDefaultPositionY","addListener","value","_this$props10","swipeBackPosition","splice","calculateOverlayLabelStyle","dynamicStyle","overlayLabels","style","overlayLabelStyle","label","styles","hideOverlayLabel","calculateOverlayLabelWrapperStyle","dynamicWrapperStyle","wrapper","opacity","animateOverlayLabelsOpacity","interpolateOverlayLabelsOpacity","overlayLabelWrapperStyle","calculateSwipableCardStyle","animateCardOpacity","interpolateCardOpacity","rotation","interpolateRotation","card","zIndex","transform","translateX","translateY","rotate","cardStyle","calculateStackCardZoomStyle","scale","calculateSwipeBackCardStyle","interpolate","inputRange","inputCardOpacityRangeX","outputRange","outputCardOpacityRangeX","inputCardOpacityRangeY","outputCardOpacityRangeY","inputOverlayLabelsOpacityRangeX","outputOverlayLabelsOpacityRangeX","inputOverlayLabelsOpacityRangeY","outputOverlayLabelsOpacityRangeY","inputRotationRange","outputRotationRange","render","_this$props11","pointerEvents","backgroundColor","containerStyle","swipeBackCard","testID","jsxs","View","container","children","renderChildren","renderSwipeBackCard","renderStack","_this$props12","childrenOnTop","jsx","childrenViewStyle","getCardKey","cardContent","keyExtractor","pushCardToStack","renderedCards","key","firstCard","stackCardZoomStyle","stackCard","renderCard","swipableCardStyle","renderOverlayLabel","push","panHandlers","_this$state4","_this$props13","cardPosition","previousCardStyle","previousCard","_this$props14","labelTypeNone","directionSwipeLabelDisabled","element","Text","title","ValueXY","_createClass2","Component","propTypes","PropTypes","bool","string","number","oneOfType","object","array","isRequired","any","func","inputCardOpacityRange","outputCardOpacityRange","oneOf","secondCardZoom","zoomAnimationDuration","zoomFriction","defaultProps","fontSize","fontWeight","borderRadius","padding","overflow","flex","_default","exports"],"sources":["C:/Users/jsier/Desktop/AwesomeProject/node_modules/react-native-deck-swiper/Swiper.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { PanResponder, Text, View, Dimensions, Animated, InteractionManager } from 'react-native'\nimport PropTypes from 'prop-types'\nimport isEqual from 'lodash/isEqual'\n\nimport styles from './styles'\n\nconst { height, width } = Dimensions.get('window')\nconst LABEL_TYPES = {\n  NONE: 'none',\n  LEFT: 'left',\n  RIGHT: 'right',\n  TOP: 'top',\n  BOTTOM: 'bottom'\n}\nconst SWIPE_MULTIPLY_FACTOR = 7\n\nconst calculateCardIndexes = (firstCardIndex, cards) => {\n  firstCardIndex = firstCardIndex || 0\n  const previousCardIndex = firstCardIndex === 0 ? cards.length - 1 : firstCardIndex - 1\n  const secondCardIndex = firstCardIndex === cards.length - 1 ? 0 : firstCardIndex + 1\n  return { firstCardIndex, secondCardIndex, previousCardIndex }\n}\n\nconst rebuildStackAnimatedValues = (props) => {\n  const stackPositionsAndScales = {}\n  const { stackSize, stackSeparation, stackScale } = props\n\n  for (let position = 0; position < stackSize; position++) {\n    stackPositionsAndScales[`stackPosition${position}`] = new Animated.Value(stackSeparation * position)\n    stackPositionsAndScales[`stackScale${position}`] = new Animated.Value((100 - stackScale * position) * 0.01)\n  }\n\n  return stackPositionsAndScales\n}\n\nclass Swiper extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      ...calculateCardIndexes(props.cardIndex, props.cards),\n      pan: new Animated.ValueXY(),\n\n      previousCardX: new Animated.Value(props.previousCardDefaultPositionX),\n      previousCardY: new Animated.Value(props.previousCardDefaultPositionY),\n      swipedAllCards: false,\n      panResponderLocked: false,\n      labelType: LABEL_TYPES.NONE,\n      slideGesture: false,\n      swipeBackXYPositions: [],\n      isSwipingBack: false,\n      ...rebuildStackAnimatedValues(props)\n    }\n\n    this._mounted = true\n    this._animatedValueX = 0\n    this._animatedValueY = 0\n\n    this.state.pan.x.addListener(value => (this._animatedValueX = value.value))\n    this.state.pan.y.addListener(value => (this._animatedValueY = value.value))\n\n    this.initializeCardStyle()\n    this.initializePanResponder()\n  }\n\n  shouldComponentUpdate = (nextProps, nextState) => {\n    const { props, state } = this\n    const propsChanged = (\n      !isEqual(props.cards, nextProps.cards) ||\n      props.cardIndex !== nextProps.cardIndex\n    )\n    const stateChanged = (\n      nextState.firstCardIndex !== state.firstCardIndex ||\n      nextState.secondCardIndex !== state.secondCardIndex ||\n      nextState.previousCardIndex !== state.previousCardIndex ||\n      nextState.labelType !== state.labelType ||\n      nextState.swipedAllCards !== state.swipedAllCards\n    )\n    return propsChanged || stateChanged\n  }\n\n  componentWillUnmountAfterInteractions = () => {\n    this.state.pan.x.removeAllListeners()\n    this.state.pan.y.removeAllListeners()\n    this.dimensionsChangeSubscription?.remove()\n  }\n\n  componentWillUnmount = () => {\n    this._mounted = false;\n    InteractionManager.runAfterInteractions(this.componentWillUnmountAfterInteractions.bind(this));\n  }\n\n  getCardStyle = () => {\n    const { height, width } = Dimensions.get('window')\n    const {\n      cardVerticalMargin,\n      cardHorizontalMargin,\n      marginTop,\n      marginBottom\n    } = this.props\n\n    const cardWidth = width - cardHorizontalMargin * 2\n    const cardHeight =\n      height - cardVerticalMargin * 2 - marginTop - marginBottom\n\n    return {\n      top: cardVerticalMargin,\n      left: cardHorizontalMargin,\n      width: cardWidth,\n      height: cardHeight\n    }\n  }\n\n  initializeCardStyle = () => {\n    // this.forceUpdate()\n    this.dimensionsChangeSubscription = Dimensions.addEventListener('change', this.onDimensionsChange)\n  }\n\n  initializePanResponder = () => {\n    this._panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: (event, gestureState) => true,\n      onMoveShouldSetPanResponder: (event, gestureState) => false,\n\n      onMoveShouldSetPanResponderCapture: (evt, gestureState) => {\n        const isVerticalSwipe = Math.sqrt(\n          Math.pow(gestureState.dx, 2) < Math.pow(gestureState.dy, 2)\n        )\n        if (!this.props.verticalSwipe && isVerticalSwipe) {\n          return false\n        }\n        return Math.sqrt(Math.pow(gestureState.dx, 2) + Math.pow(gestureState.dy, 2)) > 10\n      },\n      onPanResponderGrant: this.onPanResponderGrant,\n      onPanResponderMove: this.onPanResponderMove,\n      onPanResponderRelease: this.onPanResponderRelease,\n      onPanResponderTerminate: this.onPanResponderRelease\n    })\n  }\n\n  createAnimatedEvent = () => {\n    const { horizontalSwipe, verticalSwipe } = this.props\n    const { x, y } = this.state.pan\n    const dx = horizontalSwipe ? x : new Animated.Value(0)\n    const dy = verticalSwipe ? y : new Animated.Value(0)\n    return { dx, dy }\n  }\n\n  onDimensionsChange = () => {\n    this.forceUpdate()\n  }\n\n  onPanResponderMove = (event, gestureState) => {\n    this.props.onSwiping(this._animatedValueX, this._animatedValueY)\n\n    let { overlayOpacityHorizontalThreshold, overlayOpacityVerticalThreshold } = this.props\n    if (!overlayOpacityHorizontalThreshold) {\n      overlayOpacityHorizontalThreshold = this.props.horizontalThreshold\n    }\n    if (!overlayOpacityVerticalThreshold) {\n      overlayOpacityVerticalThreshold = this.props.verticalThreshold\n    }\n\n    let isSwipingLeft,\n      isSwipingRight,\n      isSwipingTop,\n      isSwipingBottom\n\n    if (Math.abs(this._animatedValueX) > Math.abs(this._animatedValueY) && Math.abs(this._animatedValueX) > overlayOpacityHorizontalThreshold) {\n      if (this._animatedValueX > 0) isSwipingRight = true\n      else isSwipingLeft = true\n    } else if (Math.abs(this._animatedValueY) > Math.abs(this._animatedValueX) && Math.abs(this._animatedValueY) > overlayOpacityVerticalThreshold) {\n      if (this._animatedValueY > 0) isSwipingBottom = true\n      else isSwipingTop = true\n    }\n\n    if (isSwipingRight) {\n      this.setState({ labelType: LABEL_TYPES.RIGHT })\n    } else if (isSwipingLeft) {\n      this.setState({ labelType: LABEL_TYPES.LEFT })\n    } else if (isSwipingTop) {\n      this.setState({ labelType: LABEL_TYPES.TOP })\n    } else if (isSwipingBottom) {\n      this.setState({ labelType: LABEL_TYPES.BOTTOM })\n    } else {\n      this.setState({ labelType: LABEL_TYPES.NONE })\n    }\n\n    const { onTapCardDeadZone } = this.props\n    if (\n      this._animatedValueX < -onTapCardDeadZone ||\n      this._animatedValueX > onTapCardDeadZone ||\n      this._animatedValueY < -onTapCardDeadZone ||\n      this._animatedValueY > onTapCardDeadZone\n    ) {\n      this.setState({\n        slideGesture: true\n      })\n    }\n\n    return Animated.event([null, this.createAnimatedEvent()], { useNativeDriver: false })(\n      event,\n      gestureState\n    )\n  }\n\n  onPanResponderGrant = (event, gestureState) => {\n    this.props.dragStart && this.props.dragStart()\n    if (!this.state.panResponderLocked) {\n      this.state.pan.setOffset({\n        x: this._animatedValueX,\n        y: this._animatedValueY\n      })\n    }\n\n    this.state.pan.setValue({\n      x: 0,\n      y: 0\n    })\n  }\n\n  validPanResponderRelease = () => {\n    const {\n      disableBottomSwipe,\n      disableLeftSwipe,\n      disableRightSwipe,\n      disableTopSwipe\n    } = this.props\n\n    const {\n      isSwipingLeft,\n      isSwipingRight,\n      isSwipingTop,\n      isSwipingBottom\n    } = this.getSwipeDirection(this._animatedValueX, this._animatedValueY)\n\n    return (\n      (isSwipingLeft && !disableLeftSwipe) ||\n      (isSwipingRight && !disableRightSwipe) ||\n      (isSwipingTop && !disableTopSwipe) ||\n      (isSwipingBottom && !disableBottomSwipe)\n    )\n  }\n\n  onPanResponderRelease = (e, gestureState) => {\n    this.props.dragEnd && this.props.dragEnd()\n    if (this.state.panResponderLocked) {\n      this.state.pan.setValue({\n        x: 0,\n        y: 0\n      })\n      this.state.pan.setOffset({\n        x: 0,\n        y: 0\n      })\n\n      return\n    }\n\n    const { horizontalThreshold, verticalThreshold } = this.props\n\n    const animatedValueX = Math.abs(this._animatedValueX)\n    const animatedValueY = Math.abs(this._animatedValueY)\n\n    const isSwiping =\n      animatedValueX > horizontalThreshold || animatedValueY > verticalThreshold\n\n    if (isSwiping && this.validPanResponderRelease()) {\n      const onSwipeDirectionCallback = this.getOnSwipeDirectionCallback(\n        this._animatedValueX,\n        this._animatedValueY\n      )\n\n      this.swipeCard(onSwipeDirectionCallback)\n    } else {\n      this.resetTopCard()\n    }\n\n    if (!this.state.slideGesture) {\n      this.props.onTapCard(this.state.firstCardIndex)\n    }\n\n    this.setState({\n      labelType: LABEL_TYPES.NONE,\n      slideGesture: false\n    })\n  }\n\n  getOnSwipeDirectionCallback = (animatedValueX, animatedValueY) => {\n    const {\n      onSwipedLeft,\n      onSwipedRight,\n      onSwipedTop,\n      onSwipedBottom\n    } = this.props\n\n    const {\n      isSwipingLeft,\n      isSwipingRight,\n      isSwipingTop,\n      isSwipingBottom\n    } = this.getSwipeDirection(animatedValueX, animatedValueY)\n\n    if (isSwipingRight) {\n      return onSwipedRight\n    }\n\n    if (isSwipingLeft) {\n      return onSwipedLeft\n    }\n\n    if (isSwipingTop) {\n      return onSwipedTop\n    }\n\n    if (isSwipingBottom) {\n      return onSwipedBottom\n    }\n  }\n\n  mustDecrementCardIndex = (animatedValueX, animatedValueY) => {\n    const {\n      isSwipingLeft,\n      isSwipingRight,\n      isSwipingTop,\n      isSwipingBottom\n    } = this.getSwipeDirection(animatedValueX, animatedValueY)\n\n    return (\n      (isSwipingLeft && this.props.goBackToPreviousCardOnSwipeLeft) ||\n      (isSwipingRight && this.props.goBackToPreviousCardOnSwipeRight) ||\n      (isSwipingTop && this.props.goBackToPreviousCardOnSwipeTop) ||\n      (isSwipingBottom && this.props.goBackToPreviousCardOnSwipeBottom)\n    )\n  }\n\n  getSwipeDirection = (animatedValueX, animatedValueY) => {\n    const isSwipingLeft = animatedValueX < -this.props.horizontalThreshold\n    const isSwipingRight = animatedValueX > this.props.horizontalThreshold\n    const isSwipingTop = animatedValueY < -this.props.verticalThreshold\n    const isSwipingBottom = animatedValueY > this.props.verticalThreshold\n\n    return { isSwipingLeft, isSwipingRight, isSwipingTop, isSwipingBottom }\n  }\n\n  resetTopCard = cb => {\n    Animated.spring(this.state.pan, {\n      toValue: 0,\n      friction: this.props.topCardResetAnimationFriction,\n      tension: this.props.topCardResetAnimationTension,\n      useNativeDriver: true\n    }).start(cb)\n\n    this.state.pan.setOffset({\n      x: 0,\n      y: 0\n    })\n\n    this.props.onSwipedAborted()\n  }\n\n  swipeBack = cb => {\n    const { swipeBackXYPositions, isSwipingBack } = this.state\n    const { infinite } = this.props\n    const canSwipeBack = !isSwipingBack && (swipeBackXYPositions.length > 0 || infinite)\n    if (!canSwipeBack) {\n      return\n    }\n    this.setState({isSwipingBack: !isSwipingBack, swipeBackXYPositions}, () => {\n      this.animatePreviousCard(this.calculateNextPreviousCardPosition(), cb)\n    })\n  }\n\n  swipeLeft = (mustDecrementCardIndex = false) => {\n    this.swipeCard(\n      this.props.onSwipedLeft,\n      -this.props.horizontalThreshold,\n      0,\n      mustDecrementCardIndex\n    )\n  }\n\n  swipeRight = (mustDecrementCardIndex = false) => {\n    this.swipeCard(\n      this.props.onSwipedRight,\n      this.props.horizontalThreshold,\n      0,\n      mustDecrementCardIndex\n    )\n  }\n\n  swipeTop = (mustDecrementCardIndex = false) => {\n    this.swipeCard(\n      this.props.onSwipedTop,\n      0,\n      -this.props.verticalThreshold,\n      mustDecrementCardIndex\n    )\n  }\n\n  swipeBottom = (mustDecrementCardIndex = false) => {\n    this.swipeCard(\n      this.props.onSwipedBottom,\n      0,\n      this.props.verticalThreshold,\n      mustDecrementCardIndex\n    )\n  }\n\n  swipeCard = (\n    onSwiped,\n    x = this._animatedValueX,\n    y = this._animatedValueY,\n    mustDecrementCardIndex = false\n  ) => {\n    this.setState({ panResponderLocked: true })\n    this.animateStack()\n    Animated.timing(this.state.pan, {\n      toValue: {\n        x: x * SWIPE_MULTIPLY_FACTOR,\n        y: y * SWIPE_MULTIPLY_FACTOR\n      },\n      duration: this.props.swipeAnimationDuration,\n      useNativeDriver: true\n    }).start(() => {\n      this.setSwipeBackCardXY(x, y, () => {\n        mustDecrementCardIndex = mustDecrementCardIndex\n          ? true\n          : this.mustDecrementCardIndex(\n            this._animatedValueX,\n            this._animatedValueY\n          )\n\n        if (mustDecrementCardIndex) {\n          this.decrementCardIndex(onSwiped)\n        } else {\n          this.incrementCardIndex(onSwiped)\n        }\n      })\n    })\n  }\n\n  setSwipeBackCardXY = (x = -width, y = 0, cb) => {\n    this.setState({swipeBackXYPositions: [...this.state.swipeBackXYPositions, {x, y}]}, cb)\n  }\n\n  animatePreviousCard = ({x, y}, cb) => {\n    const { previousCardX, previousCardY } = this.state\n    previousCardX.setValue(x * SWIPE_MULTIPLY_FACTOR)\n    previousCardY.setValue(y * SWIPE_MULTIPLY_FACTOR)\n    Animated.parallel([\n      Animated.spring(this.state.previousCardX, {\n        toValue: 0,\n        friction: this.props.stackAnimationFriction,\n        tension: this.props.stackAnimationTension,\n        useNativeDriver: true\n      }),\n      Animated.spring(this.state.previousCardY, {\n        toValue: 0,\n        friction: this.props.stackAnimationFriction,\n        tension: this.props.stackAnimationTension,\n        useNativeDriver: true\n      })\n    ]).start(() => {\n      this.setState({isSwipingBack: false})\n      this.decrementCardIndex(cb)\n    })\n  }\n\n  animateStack = () => {\n    const { secondCardIndex, swipedAllCards } = this.state\n    let { stackSize, infinite, showSecondCard, cards } = this.props\n    let index = secondCardIndex\n\n    while (stackSize-- > 1 && showSecondCard && !swipedAllCards) {\n      if (this.state[`stackPosition${stackSize}`] && this.state[`stackScale${stackSize}`]) {\n        const newSeparation = this.props.stackSeparation * (stackSize - 1)\n        const newScale = (100 - this.props.stackScale * (stackSize - 1)) * 0.01\n        Animated.parallel([\n          Animated.spring(this.state[`stackPosition${stackSize}`], {\n            toValue: newSeparation,\n            friction: this.props.stackAnimationFriction,\n            tension: this.props.stackAnimationTension,\n            useNativeDriver: true\n          }),\n          Animated.spring(this.state[`stackScale${stackSize}`], {\n            toValue: newScale,\n            friction: this.props.stackAnimationFriction,\n            tension: this.props.stackAnimationTension,\n            useNativeDriver: true\n          })\n        ]).start()\n      }\n\n      if (index === cards.length - 1) {\n        if (!infinite) break\n        index = 0\n      } else {\n        index++\n      }\n    }\n  }\n\n  incrementCardIndex = onSwiped => {\n    const { firstCardIndex } = this.state\n    const { infinite } = this.props\n    let newCardIndex = firstCardIndex + 1\n    let swipedAllCards = false\n\n    this.onSwipedCallbacks(onSwiped)\n\n    const allSwipedCheck = () => newCardIndex === this.props.cards.length\n\n    if (allSwipedCheck()) {\n      if (!infinite) {\n        this.props.onSwipedAll()\n        // onSwipeAll may have added cards\n        if (allSwipedCheck()) {\n          swipedAllCards = true\n        }\n      } else {\n        newCardIndex = 0;\n      }\n    }\n\n    this.setCardIndex(newCardIndex, swipedAllCards)\n  }\n\n  decrementCardIndex = cb => {\n    const { firstCardIndex } = this.state\n    const lastCardIndex = this.props.cards.length - 1\n    const previousCardIndex = firstCardIndex - 1\n\n    const newCardIndex =\n      firstCardIndex === 0 ? lastCardIndex : previousCardIndex\n\n    this.onSwipedCallbacks(cb)\n    this.setCardIndex(newCardIndex, false)\n  }\n\n  jumpToCardIndex = newCardIndex => {\n    if (this.props.cards[newCardIndex]) {\n      this.setCardIndex(newCardIndex, false)\n    }\n  }\n  rebuildStackValues = () => {\n    const stackPositionsAndScales = {}\n    const { stackSize, stackSeparation, stackScale } = this.props\n    for (let position = 0; position < stackSize; position++) {\n      stackPositionsAndScales[`stackPosition${position}`] = new Animated.Value(stackSeparation * position)\n      stackPositionsAndScales[`stackScale${position}`] = new Animated.Value((100 - stackScale * position) * 0.01)\n    }\n    return stackPositionsAndScales\n  }\n\n  onSwipedCallbacks = (swipeDirectionCallback) => {\n    const previousCardIndex = this.state.firstCardIndex\n    this.props.onSwiped(previousCardIndex, this.props.cards[previousCardIndex])\n    this.setState(this.rebuildStackValues)\n    if (swipeDirectionCallback) {\n      swipeDirectionCallback(previousCardIndex, this.props.cards[previousCardIndex])\n    }\n  }\n\n  setCardIndex = (newCardIndex, swipedAllCards) => {\n    if (this._mounted) {\n      this.setState(\n        {\n          ...calculateCardIndexes(newCardIndex, this.props.cards),\n          swipedAllCards: swipedAllCards,\n          panResponderLocked: false\n        },\n        this.resetPanAndScale\n      )\n    }\n  }\n\n  resetPanAndScale = () => {\n    const {previousCardDefaultPositionX, previousCardDefaultPositionY} = this.props\n    this.state.pan.setValue({ x: 0, y: 0 })\n    this.state.pan.setOffset({ x: 0, y: 0})\n    this._animatedValueX = 0\n    this._animatedValueY = 0\n    this.state.previousCardX.setValue(previousCardDefaultPositionX)\n    this.state.previousCardY.setValue(previousCardDefaultPositionY)\n    this.state.pan.x.addListener(value => this._animatedValueX = value.value)\n    this.state.pan.y.addListener(value => this._animatedValueY = value.value)\n  }\n\n  calculateNextPreviousCardPosition = () => {\n    const { swipeBackXYPositions } = this.state\n    let { previousCardDefaultPositionX: x, previousCardDefaultPositionY: y } = this.props\n    const swipeBackPosition = swipeBackXYPositions.splice(-1, 1)\n    if (swipeBackPosition[0]) {\n      x = swipeBackPosition[0].x\n      y = swipeBackPosition[0].y\n    }\n    return { x, y }\n  }\n\n  calculateOverlayLabelStyle = () => {\n    const dynamicStyle = this.props.overlayLabels[this.state.labelType].style\n    let overlayLabelStyle = dynamicStyle ? dynamicStyle.label : {}\n\n    if (this.state.labelType === LABEL_TYPES.NONE) {\n      overlayLabelStyle = styles.hideOverlayLabel\n    }\n\n    return [this.props.overlayLabelStyle, overlayLabelStyle]\n  }\n\n  calculateOverlayLabelWrapperStyle = () => {\n    const dynamicStyle = this.props.overlayLabels[this.state.labelType].style\n    const dynamicWrapperStyle = dynamicStyle ? dynamicStyle.wrapper : {}\n\n    const opacity = this.props.animateOverlayLabelsOpacity\n      ? this.interpolateOverlayLabelsOpacity()\n      : 1\n    return [this.props.overlayLabelWrapperStyle, dynamicWrapperStyle, { opacity }]\n  }\n\n  calculateSwipableCardStyle = () => {\n    const opacity = this.props.animateCardOpacity\n      ? this.interpolateCardOpacity()\n      : 1\n    const rotation = this.interpolateRotation()\n\n    return [\n      styles.card,\n      this.getCardStyle(),\n      {\n        zIndex: 1,\n        opacity: opacity,\n        transform: [\n          { translateX: this.state.pan.x },\n          { translateY: this.state.pan.y },\n          { rotate: rotation }\n        ]\n      },\n      this.props.cardStyle\n    ]\n  }\n\n  calculateStackCardZoomStyle = (position) => [\n    styles.card,\n    this.getCardStyle(),\n    {\n      zIndex: position * -1,\n      transform: [{ scale: this.state[`stackScale${position}`] }, { translateY: this.state[`stackPosition${position}`] }]\n    },\n    this.props.cardStyle\n  ]\n\n  calculateSwipeBackCardStyle = () => [\n    styles.card,\n    this.getCardStyle(),\n    {\n      zIndex: 4,\n      transform: [\n        { translateX: this.state.previousCardX },\n        { translateY: this.state.previousCardY }\n      ]\n    },\n    this.props.cardStyle\n  ]\n\n  interpolateCardOpacity = () => {\n    const animatedValueX = Math.abs(this._animatedValueX)\n    const animatedValueY = Math.abs(this._animatedValueY)\n    let opacity\n\n    if (animatedValueX > animatedValueY) {\n      opacity = this.state.pan.x.interpolate({\n        inputRange: this.props.inputCardOpacityRangeX,\n        outputRange: this.props.outputCardOpacityRangeX\n      })\n    } else {\n      opacity = this.state.pan.y.interpolate({\n        inputRange: this.props.inputCardOpacityRangeY,\n        outputRange: this.props.outputCardOpacityRangeY\n      })\n    }\n\n    return opacity\n  }\n\n  interpolateOverlayLabelsOpacity = () => {\n    const animatedValueX = Math.abs(this._animatedValueX)\n    const animatedValueY = Math.abs(this._animatedValueY)\n    let opacity\n\n    if (animatedValueX > animatedValueY) {\n      opacity = this.state.pan.x.interpolate({\n        inputRange: this.props.inputOverlayLabelsOpacityRangeX,\n        outputRange: this.props.outputOverlayLabelsOpacityRangeX\n      })\n    } else {\n      opacity = this.state.pan.y.interpolate({\n        inputRange: this.props.inputOverlayLabelsOpacityRangeY,\n        outputRange: this.props.outputOverlayLabelsOpacityRangeY\n      })\n    }\n\n    return opacity\n  }\n\n  interpolateRotation = () =>\n    this.state.pan.x.interpolate({\n      inputRange: this.props.inputRotationRange,\n      outputRange: this.props.outputRotationRange\n    })\n\n  render = () => {\n    const { pointerEvents, backgroundColor, marginTop, marginBottom, containerStyle, swipeBackCard, testID } = this.props\n    return (\n      <View\n        pointerEvents={pointerEvents}\n        testID={testID}\n        style={[\n          styles.container,\n          {\n            backgroundColor: backgroundColor,\n            marginTop: marginTop,\n            marginBottom: marginBottom\n          },\n          containerStyle\n        ]}\n      >\n        {this.renderChildren()}\n        {swipeBackCard ? this.renderSwipeBackCard() : null}\n        {this.renderStack()}\n      </View>\n    )\n  }\n\n  renderChildren = () => {\n    const { childrenOnTop, children, stackSize, showSecondCard } = this.props\n\n    let zIndex = (stackSize && showSecondCard)\n      ? stackSize * -1\n      : 1\n\n    if (childrenOnTop) {\n      zIndex = 5\n    }\n\n    return (\n      <View pointerEvents='box-none' style={[styles.childrenViewStyle, { zIndex: zIndex }]}>\n        {children}\n      </View>\n    )\n  }\n\n  getCardKey = (cardContent, cardIndex) => {\n    const { keyExtractor } = this.props\n\n    if (keyExtractor) {\n      return keyExtractor(cardContent)\n    }\n\n    return cardIndex\n  }\n\n  pushCardToStack = (renderedCards, index, position, key, firstCard) => {\n    const { cards } = this.props\n    const stackCardZoomStyle = this.calculateStackCardZoomStyle(position)\n    const stackCard = this.props.renderCard(cards[index], index)\n    const swipableCardStyle = this.calculateSwipableCardStyle()\n    const renderOverlayLabel = this.renderOverlayLabel()\n    renderedCards.push(\n      <Animated.View\n        key={key}\n        style={firstCard ? swipableCardStyle : stackCardZoomStyle}\n        {...this._panResponder.panHandlers}\n      >\n        {firstCard ? renderOverlayLabel : null}\n        {stackCard}\n      </Animated.View>\n    )\n  }\n\n  renderStack = () => {\n    const { firstCardIndex, swipedAllCards } = this.state\n    const { cards } = this.props\n    const renderedCards = []\n    let { stackSize, infinite, showSecondCard } = this.props\n    let index = firstCardIndex\n    let firstCard = true\n    let cardPosition = 0\n\n    while (stackSize-- > 0 && (firstCard || showSecondCard) && !swipedAllCards) {\n      const key = this.getCardKey(cards[index], index)\n      this.pushCardToStack(renderedCards, index, cardPosition, key, firstCard)\n\n      firstCard = false\n\n      if (index === cards.length - 1) {\n        if (!infinite) break\n        index = 0\n      } else {\n        index++\n      }\n      cardPosition++\n    }\n    return renderedCards\n  }\n\n  renderSwipeBackCard = () => {\n    const { previousCardIndex } = this.state\n    const { cards } = this.props\n    const previousCardStyle = this.calculateSwipeBackCardStyle()\n    const previousCard = this.props.renderCard(cards[previousCardIndex], previousCardIndex)\n    const key = this.getCardKey(cards[previousCardIndex], previousCardIndex)\n\n    return (\n      <Animated.View key={key} style={previousCardStyle}>\n        {previousCard}\n      </Animated.View>\n    )\n  }\n\n  renderOverlayLabel = () => {\n    const {\n      disableBottomSwipe,\n      disableLeftSwipe,\n      disableRightSwipe,\n      disableTopSwipe,\n      overlayLabels\n    } = this.props\n\n    const { labelType } = this.state\n\n    const labelTypeNone = labelType === LABEL_TYPES.NONE\n    const directionSwipeLabelDisabled =\n      (labelType === LABEL_TYPES.BOTTOM && disableBottomSwipe) ||\n      (labelType === LABEL_TYPES.LEFT && disableLeftSwipe) ||\n      (labelType === LABEL_TYPES.RIGHT && disableRightSwipe) ||\n      (labelType === LABEL_TYPES.TOP && disableTopSwipe)\n\n    if (\n      !overlayLabels ||\n      !overlayLabels[labelType] ||\n      labelTypeNone ||\n      directionSwipeLabelDisabled\n    ) {\n      return null\n    }\n\n    return (\n      <Animated.View style={this.calculateOverlayLabelWrapperStyle()}>\n        {!overlayLabels[labelType].element &&\n          <Text style={this.calculateOverlayLabelStyle()}>\n            {overlayLabels[labelType].title}\n          </Text>\n        }\n\n        {overlayLabels[labelType].element &&\n          overlayLabels[labelType].element\n        }\n      </Animated.View>\n    )\n  }\n}\n\nSwiper.propTypes = {\n  animateCardOpacity: PropTypes.bool,\n  animateOverlayLabelsOpacity: PropTypes.bool,\n  backgroundColor: PropTypes.string,\n  cardHorizontalMargin: PropTypes.number,\n  cardIndex: PropTypes.number,\n  cardStyle: PropTypes.oneOfType([PropTypes.number, PropTypes.object]),\n  cardVerticalMargin: PropTypes.number,\n  cards: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\n  containerStyle: PropTypes.object,\n  children: PropTypes.any,\n  childrenOnTop: PropTypes.bool,\n  dragEnd: PropTypes.func,\n  dragStart: PropTypes.func,\n  disableBottomSwipe: PropTypes.bool,\n  disableLeftSwipe: PropTypes.bool,\n  disableRightSwipe: PropTypes.bool,\n  disableTopSwipe: PropTypes.bool,\n  goBackToPreviousCardOnSwipeBottom: PropTypes.bool,\n  goBackToPreviousCardOnSwipeLeft: PropTypes.bool,\n  goBackToPreviousCardOnSwipeRight: PropTypes.bool,\n  goBackToPreviousCardOnSwipeTop: PropTypes.bool,\n  horizontalSwipe: PropTypes.bool,\n  horizontalThreshold: PropTypes.number,\n  infinite: PropTypes.bool,\n  inputCardOpacityRangeX: PropTypes.array,\n  inputCardOpacityRangeY: PropTypes.array,\n  inputOverlayLabelsOpacityRangeX: PropTypes.array,\n  inputOverlayLabelsOpacityRangeY: PropTypes.array,\n  inputCardOpacityRange: PropTypes.array,\n  inputRotationRange: PropTypes.array,\n  keyExtractor: PropTypes.func,\n  marginBottom: PropTypes.number,\n  marginTop: PropTypes.number,\n  onSwiped: PropTypes.func,\n  onSwipedAborted: PropTypes.func,\n  onSwipedAll: PropTypes.func,\n  onSwipedBottom: PropTypes.func,\n  onSwipedLeft: PropTypes.func,\n  onSwipedRight: PropTypes.func,\n  onSwipedTop: PropTypes.func,\n  onSwiping: PropTypes.func,\n  onTapCard: PropTypes.func,\n  onTapCardDeadZone: PropTypes.number,\n  outputCardOpacityRangeX: PropTypes.array,\n  outputCardOpacityRangeY: PropTypes.array,\n  outputOverlayLabelsOpacityRangeX: PropTypes.array,\n  outputOverlayLabelsOpacityRangeY: PropTypes.array,\n  outputRotationRange: PropTypes.array,\n  outputCardOpacityRange: PropTypes.array,\n  overlayLabels: PropTypes.object,\n  overlayLabelStyle: PropTypes.object,\n  overlayLabelWrapperStyle: PropTypes.object,\n  overlayOpacityHorizontalThreshold: PropTypes.number,\n  overlayOpacityVerticalThreshold: PropTypes.number,\n  pointerEvents: PropTypes.oneOf(['box-none', 'none', 'box-only', 'auto']),\n  previousCardDefaultPositionX: PropTypes.number,\n  previousCardDefaultPositionY: PropTypes.number,\n  renderCard: PropTypes.func.isRequired,\n  secondCardZoom: PropTypes.number,\n  showSecondCard: PropTypes.bool,\n  stackAnimationFriction: PropTypes.number,\n  stackAnimationTension: PropTypes.number,\n  stackScale: PropTypes.number,\n  stackSeparation: PropTypes.number,\n  stackSize: PropTypes.number,\n  swipeAnimationDuration: PropTypes.number,\n  swipeBackCard: PropTypes.bool,\n  testID: PropTypes.string,\n  topCardResetAnimationFriction: PropTypes.number,\n  topCardResetAnimationTension: PropTypes.number,\n  verticalSwipe: PropTypes.bool,\n  verticalThreshold: PropTypes.number,\n  zoomAnimationDuration: PropTypes.number,\n  zoomFriction: PropTypes.number\n}\n\nSwiper.defaultProps = {\n  animateCardOpacity: false,\n  animateOverlayLabelsOpacity: false,\n  backgroundColor: '#4FD0E9',\n  cardHorizontalMargin: 20,\n  cardIndex: 0,\n  cardStyle: {},\n  cardVerticalMargin: 60,\n  childrenOnTop: false,\n  containerStyle: {},\n  disableBottomSwipe: false,\n  disableLeftSwipe: false,\n  disableRightSwipe: false,\n  disableTopSwipe: false,\n  horizontalSwipe: true,\n  horizontalThreshold: width / 4,\n  goBackToPreviousCardOnSwipeBottom: false,\n  goBackToPreviousCardOnSwipeLeft: false,\n  goBackToPreviousCardOnSwipeRight: false,\n  goBackToPreviousCardOnSwipeTop: false,\n  infinite: false,\n  inputCardOpacityRangeX: [-width / 2, -width / 3, 0, width / 3, width / 2],\n  inputCardOpacityRangeY: [-height / 2, -height / 3, 0, height / 3, height / 2],\n  inputOverlayLabelsOpacityRangeX: [\n    -width / 3,\n    -width / 4,\n    0,\n    width / 4,\n    width / 3\n  ],\n  inputOverlayLabelsOpacityRangeY: [\n    -height / 4,\n    -height / 5,\n    0,\n    height / 5,\n    height / 4\n  ],\n  inputRotationRange: [-width / 2, 0, width / 2],\n  keyExtractor: null,\n  marginBottom: 0,\n  marginTop: 0,\n  onSwiped: cardIndex => { },\n  onSwipedAborted: () => { },\n  onSwipedAll: () => { },\n  onSwipedBottom: cardIndex => { },\n  onSwipedLeft: cardIndex => { },\n  onSwipedRight: cardIndex => { },\n  onSwipedTop: cardIndex => { },\n  onSwiping: () => { },\n  onTapCard: (cardIndex) => { },\n  onTapCardDeadZone: 5,\n  outputCardOpacityRangeX: [0.8, 1, 1, 1, 0.8],\n  outputCardOpacityRangeY: [0.8, 1, 1, 1, 0.8],\n  outputOverlayLabelsOpacityRangeX: [1, 0, 0, 0, 1],\n  outputOverlayLabelsOpacityRangeY: [1, 0, 0, 0, 1],\n  outputRotationRange: ['-10deg', '0deg', '10deg'],\n  overlayLabels: null,\n  overlayLabelStyle: {\n    fontSize: 45,\n    fontWeight: 'bold',\n    borderRadius: 10,\n    padding: 10,\n    overflow: 'hidden'\n  },\n  overlayLabelWrapperStyle: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n    zIndex: 2,\n    flex: 1,\n    width: '100%',\n    height: '100%'\n  },\n  overlayOpacityHorizontalThreshold: width / 4,\n  overlayOpacityVerticalThreshold: height / 5,\n  pointerEvents: 'auto',\n  previousCardDefaultPositionX: -width,\n  previousCardDefaultPositionY: -height,\n  secondCardZoom: 0.97,\n  showSecondCard: true,\n  stackAnimationFriction: 7,\n  stackAnimationTension: 40,\n  stackScale: 3,\n  stackSeparation: 10,\n  stackSize: 1,\n  swipeAnimationDuration: 350,\n  swipeBackCard: false,\n  topCardResetAnimationFriction: 7,\n  topCardResetAnimationTension: 40,\n  verticalSwipe: true,\n  verticalThreshold: height / 5,\n  zoomAnimationDuration: 100,\n  zoomFriction: 7\n}\n\nexport default Swiper\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}