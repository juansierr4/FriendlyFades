/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @flow strict-local
 * @format
 * @generated
 */

/*
 * !!! GENERATED FILE !!!
 *
 * Any manual changes to this file will be overwritten. To regenerate run `yarn build`.
 */

// lint directives to let us do some basic validation of generated files
/* eslint no-undef: 'error', no-unused-vars: ['error', {vars: "local"}], no-redeclare: 'error' */
/* global $NonMaybeType, Partial, $ReadOnly, $ReadOnlyArray */

'use strict';

import type {
  AnyTypeAnnotation,
  ArrayExpression,
  ArrayPattern,
  ArrayTypeAnnotation,
  ArrowFunctionExpression,
  AsExpression,
  AssignmentExpression,
  AssignmentPattern,
  AwaitExpression,
  BigIntLiteral,
  BigIntLiteralTypeAnnotation,
  BigIntTypeAnnotation,
  BinaryExpression,
  BlockStatement,
  BooleanLiteral,
  BooleanLiteralTypeAnnotation,
  BooleanTypeAnnotation,
  BreakStatement,
  CallExpression,
  CatchClause,
  ChainExpression,
  ClassBody,
  ClassDeclaration,
  ClassExpression,
  ClassImplements,
  ComponentDeclaration,
  ComponentParameter,
  ComponentTypeAnnotation,
  ComponentTypeParameter,
  ConditionalExpression,
  ConditionalTypeAnnotation,
  ContinueStatement,
  DebuggerStatement,
  DeclareClass,
  DeclareComponent,
  DeclaredPredicate,
  DeclareEnum,
  DeclareExportAllDeclaration,
  DeclareExportDeclaration,
  DeclareFunction,
  DeclareInterface,
  DeclareModule,
  DeclareModuleExports,
  DeclareOpaqueType,
  DeclareTypeAlias,
  DeclareVariable,
  DoWhileStatement,
  EmptyStatement,
  EmptyTypeAnnotation,
  EnumBooleanBody,
  EnumBooleanMember,
  EnumDeclaration,
  EnumDefaultedMember,
  EnumNumberBody,
  EnumNumberMember,
  EnumStringBody,
  EnumStringMember,
  EnumSymbolBody,
  ExistsTypeAnnotation,
  ExportAllDeclaration,
  ExportDefaultDeclaration,
  ExportNamedDeclaration,
  ExportSpecifier,
  ExpressionStatement,
  ForInStatement,
  ForOfStatement,
  ForStatement,
  FunctionDeclaration,
  FunctionExpression,
  FunctionTypeAnnotation,
  FunctionTypeParam,
  GenericTypeAnnotation,
  Identifier,
  IfStatement,
  ImportAttribute,
  ImportDeclaration,
  ImportDefaultSpecifier,
  ImportExpression,
  ImportNamespaceSpecifier,
  ImportSpecifier,
  IndexedAccessType,
  InferredPredicate,
  InferTypeAnnotation,
  InterfaceDeclaration,
  InterfaceExtends,
  InterfaceTypeAnnotation,
  IntersectionTypeAnnotation,
  JSXAttribute,
  JSXClosingElement,
  JSXClosingFragment,
  JSXElement,
  JSXEmptyExpression,
  JSXExpressionContainer,
  JSXFragment,
  JSXIdentifier,
  JSXMemberExpression,
  JSXNamespacedName,
  JSXOpeningElement,
  JSXOpeningFragment,
  JSXSpreadAttribute,
  JSXSpreadChild,
  JSXText,
  KeyofTypeAnnotation,
  LabeledStatement,
  LogicalExpression,
  MemberExpression,
  MetaProperty,
  MethodDefinition,
  MixedTypeAnnotation,
  NewExpression,
  NullableTypeAnnotation,
  NullLiteral,
  NullLiteralTypeAnnotation,
  NumberLiteralTypeAnnotation,
  NumberTypeAnnotation,
  NumericLiteral,
  ObjectExpression,
  ObjectPattern,
  ObjectTypeAnnotation,
  ObjectTypeCallProperty,
  ObjectTypeIndexer,
  ObjectTypeInternalSlot,
  ObjectTypeMappedTypeProperty,
  ObjectTypeProperty,
  ObjectTypeSpreadProperty,
  OpaqueType,
  OptionalIndexedAccessType,
  PrivateIdentifier,
  Property,
  PropertyDefinition,
  QualifiedTypeIdentifier,
  QualifiedTypeofIdentifier,
  RegExpLiteral,
  RestElement,
  ReturnStatement,
  SequenceExpression,
  SpreadElement,
  StringLiteral,
  StringLiteralTypeAnnotation,
  StringTypeAnnotation,
  Super,
  SwitchCase,
  SwitchStatement,
  SymbolTypeAnnotation,
  TaggedTemplateExpression,
  TemplateElement,
  TemplateLiteral,
  ThisExpression,
  ThisTypeAnnotation,
  ThrowStatement,
  TryStatement,
  TupleTypeAnnotation,
  TupleTypeLabeledElement,
  TupleTypeSpreadElement,
  TypeAlias,
  TypeAnnotation,
  TypeCastExpression,
  TypeofTypeAnnotation,
  TypeOperator,
  TypeParameter,
  TypeParameterDeclaration,
  TypeParameterInstantiation,
  TypePredicate,
  UnaryExpression,
  UnionTypeAnnotation,
  UpdateExpression,
  VariableDeclaration,
  VariableDeclarator,
  Variance,
  VoidTypeAnnotation,
  WhileStatement,
  WithStatement,
  YieldExpression,
} from 'hermes-estree';
import type {
  AnyTypeAnnotationProps,
  ArrayExpressionProps,
  ArrayPatternProps,
  ArrayTypeAnnotationProps,
  ArrowFunctionExpressionProps,
  AsExpressionProps,
  AssignmentExpressionProps,
  AssignmentPatternProps,
  AwaitExpressionProps,
  BigIntLiteralProps,
  BigIntLiteralTypeAnnotationProps,
  BigIntTypeAnnotationProps,
  BinaryExpressionProps,
  BlockStatementProps,
  BooleanLiteralProps,
  BooleanLiteralTypeAnnotationProps,
  BooleanTypeAnnotationProps,
  BreakStatementProps,
  CallExpressionProps,
  CatchClauseProps,
  ChainExpressionProps,
  ClassBodyProps,
  ClassDeclarationProps,
  ClassExpressionProps,
  ClassImplementsProps,
  ComponentDeclarationProps,
  ComponentParameterProps,
  ComponentTypeAnnotationProps,
  ComponentTypeParameterProps,
  ConditionalExpressionProps,
  ConditionalTypeAnnotationProps,
  ContinueStatementProps,
  DebuggerStatementProps,
  DeclareClassProps,
  DeclareComponentProps,
  DeclaredPredicateProps,
  DeclareEnumProps,
  DeclareExportAllDeclarationProps,
  DeclareExportDeclarationProps,
  DeclareFunctionProps,
  DeclareInterfaceProps,
  DeclareModuleProps,
  DeclareModuleExportsProps,
  DeclareOpaqueTypeProps,
  DeclareTypeAliasProps,
  DeclareVariableProps,
  DoWhileStatementProps,
  EmptyStatementProps,
  EmptyTypeAnnotationProps,
  EnumBooleanBodyProps,
  EnumBooleanMemberProps,
  EnumDeclarationProps,
  EnumDefaultedMemberProps,
  EnumNumberBodyProps,
  EnumNumberMemberProps,
  EnumStringBodyProps,
  EnumStringMemberProps,
  EnumSymbolBodyProps,
  ExistsTypeAnnotationProps,
  ExportAllDeclarationProps,
  ExportDefaultDeclarationProps,
  ExportNamedDeclarationProps,
  ExportSpecifierProps,
  ExpressionStatementProps,
  ForInStatementProps,
  ForOfStatementProps,
  ForStatementProps,
  FunctionDeclarationProps,
  FunctionExpressionProps,
  FunctionTypeAnnotationProps,
  FunctionTypeParamProps,
  GenericTypeAnnotationProps,
  IdentifierProps,
  IfStatementProps,
  ImportAttributeProps,
  ImportDeclarationProps,
  ImportDefaultSpecifierProps,
  ImportExpressionProps,
  ImportNamespaceSpecifierProps,
  ImportSpecifierProps,
  IndexedAccessTypeProps,
  InferredPredicateProps,
  InferTypeAnnotationProps,
  InterfaceDeclarationProps,
  InterfaceExtendsProps,
  InterfaceTypeAnnotationProps,
  IntersectionTypeAnnotationProps,
  JSXAttributeProps,
  JSXClosingElementProps,
  JSXClosingFragmentProps,
  JSXElementProps,
  JSXEmptyExpressionProps,
  JSXExpressionContainerProps,
  JSXFragmentProps,
  JSXIdentifierProps,
  JSXMemberExpressionProps,
  JSXNamespacedNameProps,
  JSXOpeningElementProps,
  JSXOpeningFragmentProps,
  JSXSpreadAttributeProps,
  JSXSpreadChildProps,
  JSXTextProps,
  KeyofTypeAnnotationProps,
  LabeledStatementProps,
  LogicalExpressionProps,
  MemberExpressionProps,
  MetaPropertyProps,
  MethodDefinitionProps,
  MixedTypeAnnotationProps,
  NewExpressionProps,
  NullableTypeAnnotationProps,
  NullLiteralProps,
  NullLiteralTypeAnnotationProps,
  NumberLiteralTypeAnnotationProps,
  NumberTypeAnnotationProps,
  NumericLiteralProps,
  ObjectExpressionProps,
  ObjectPatternProps,
  ObjectTypeAnnotationProps,
  ObjectTypeCallPropertyProps,
  ObjectTypeIndexerProps,
  ObjectTypeInternalSlotProps,
  ObjectTypeMappedTypePropertyProps,
  ObjectTypePropertyProps,
  ObjectTypeSpreadPropertyProps,
  OpaqueTypeProps,
  OptionalIndexedAccessTypeProps,
  PrivateIdentifierProps,
  PropertyProps,
  PropertyDefinitionProps,
  QualifiedTypeIdentifierProps,
  QualifiedTypeofIdentifierProps,
  RegExpLiteralProps,
  RestElementProps,
  ReturnStatementProps,
  SequenceExpressionProps,
  SpreadElementProps,
  StringLiteralProps,
  StringLiteralTypeAnnotationProps,
  StringTypeAnnotationProps,
  SuperProps,
  SwitchCaseProps,
  SwitchStatementProps,
  SymbolTypeAnnotationProps,
  TaggedTemplateExpressionProps,
  TemplateElementProps,
  TemplateLiteralProps,
  ThisExpressionProps,
  ThisTypeAnnotationProps,
  ThrowStatementProps,
  TryStatementProps,
  TupleTypeAnnotationProps,
  TupleTypeLabeledElementProps,
  TupleTypeSpreadElementProps,
  TypeAliasProps,
  TypeAnnotationProps,
  TypeCastExpressionProps,
  TypeofTypeAnnotationProps,
  TypeOperatorProps,
  TypeParameterProps,
  TypeParameterDeclarationProps,
  TypeParameterInstantiationProps,
  TypePredicateProps,
  UnaryExpressionProps,
  UnionTypeAnnotationProps,
  UpdateExpressionProps,
  VariableDeclarationProps,
  VariableDeclaratorProps,
  VarianceProps,
  VoidTypeAnnotationProps,
  WhileStatementProps,
  WithStatementProps,
  YieldExpressionProps,
} from './node-types';
import type {DetachedNode} from '../detachedNode';

type AnyTypeAnnotationCloneSignature = ((
  node: AnyTypeAnnotation,
  newProps: Partial<AnyTypeAnnotationProps>,
) => DetachedNode<AnyTypeAnnotation>) &
  ((
    node: ?AnyTypeAnnotation,
    newProps: Partial<AnyTypeAnnotationProps>,
  ) => DetachedNode<AnyTypeAnnotation> | null);
type ArrayExpressionCloneSignature = ((
  node: ArrayExpression,
  newProps: Partial<ArrayExpressionProps>,
) => DetachedNode<ArrayExpression>) &
  ((
    node: ?ArrayExpression,
    newProps: Partial<ArrayExpressionProps>,
  ) => DetachedNode<ArrayExpression> | null);
type ArrayPatternCloneSignature = ((
  node: ArrayPattern,
  newProps: Partial<ArrayPatternProps>,
) => DetachedNode<ArrayPattern>) &
  ((
    node: ?ArrayPattern,
    newProps: Partial<ArrayPatternProps>,
  ) => DetachedNode<ArrayPattern> | null);
type ArrayTypeAnnotationCloneSignature = ((
  node: ArrayTypeAnnotation,
  newProps: Partial<ArrayTypeAnnotationProps>,
) => DetachedNode<ArrayTypeAnnotation>) &
  ((
    node: ?ArrayTypeAnnotation,
    newProps: Partial<ArrayTypeAnnotationProps>,
  ) => DetachedNode<ArrayTypeAnnotation> | null);
type ArrowFunctionExpressionCloneSignature = ((
  node: ArrowFunctionExpression,
  newProps: Partial<ArrowFunctionExpressionProps>,
) => DetachedNode<ArrowFunctionExpression>) &
  ((
    node: ?ArrowFunctionExpression,
    newProps: Partial<ArrowFunctionExpressionProps>,
  ) => DetachedNode<ArrowFunctionExpression> | null);
type AsExpressionCloneSignature = ((
  node: AsExpression,
  newProps: Partial<AsExpressionProps>,
) => DetachedNode<AsExpression>) &
  ((
    node: ?AsExpression,
    newProps: Partial<AsExpressionProps>,
  ) => DetachedNode<AsExpression> | null);
type AssignmentExpressionCloneSignature = ((
  node: AssignmentExpression,
  newProps: Partial<AssignmentExpressionProps>,
) => DetachedNode<AssignmentExpression>) &
  ((
    node: ?AssignmentExpression,
    newProps: Partial<AssignmentExpressionProps>,
  ) => DetachedNode<AssignmentExpression> | null);
type AssignmentPatternCloneSignature = ((
  node: AssignmentPattern,
  newProps: Partial<AssignmentPatternProps>,
) => DetachedNode<AssignmentPattern>) &
  ((
    node: ?AssignmentPattern,
    newProps: Partial<AssignmentPatternProps>,
  ) => DetachedNode<AssignmentPattern> | null);
type AwaitExpressionCloneSignature = ((
  node: AwaitExpression,
  newProps: Partial<AwaitExpressionProps>,
) => DetachedNode<AwaitExpression>) &
  ((
    node: ?AwaitExpression,
    newProps: Partial<AwaitExpressionProps>,
  ) => DetachedNode<AwaitExpression> | null);
type BigIntLiteralCloneSignature = ((
  node: BigIntLiteral,
  newProps: Partial<BigIntLiteralProps>,
) => DetachedNode<BigIntLiteral>) &
  ((
    node: ?BigIntLiteral,
    newProps: Partial<BigIntLiteralProps>,
  ) => DetachedNode<BigIntLiteral> | null);
type BigIntLiteralTypeAnnotationCloneSignature = ((
  node: BigIntLiteralTypeAnnotation,
  newProps: Partial<BigIntLiteralTypeAnnotationProps>,
) => DetachedNode<BigIntLiteralTypeAnnotation>) &
  ((
    node: ?BigIntLiteralTypeAnnotation,
    newProps: Partial<BigIntLiteralTypeAnnotationProps>,
  ) => DetachedNode<BigIntLiteralTypeAnnotation> | null);
type BigIntTypeAnnotationCloneSignature = ((
  node: BigIntTypeAnnotation,
  newProps: Partial<BigIntTypeAnnotationProps>,
) => DetachedNode<BigIntTypeAnnotation>) &
  ((
    node: ?BigIntTypeAnnotation,
    newProps: Partial<BigIntTypeAnnotationProps>,
  ) => DetachedNode<BigIntTypeAnnotation> | null);
type BinaryExpressionCloneSignature = ((
  node: BinaryExpression,
  newProps: Partial<BinaryExpressionProps>,
) => DetachedNode<BinaryExpression>) &
  ((
    node: ?BinaryExpression,
    newProps: Partial<BinaryExpressionProps>,
  ) => DetachedNode<BinaryExpression> | null);
type BlockStatementCloneSignature = ((
  node: BlockStatement,
  newProps: Partial<BlockStatementProps>,
) => DetachedNode<BlockStatement>) &
  ((
    node: ?BlockStatement,
    newProps: Partial<BlockStatementProps>,
  ) => DetachedNode<BlockStatement> | null);
type BooleanLiteralCloneSignature = ((
  node: BooleanLiteral,
  newProps: Partial<BooleanLiteralProps>,
) => DetachedNode<BooleanLiteral>) &
  ((
    node: ?BooleanLiteral,
    newProps: Partial<BooleanLiteralProps>,
  ) => DetachedNode<BooleanLiteral> | null);
type BooleanLiteralTypeAnnotationCloneSignature = ((
  node: BooleanLiteralTypeAnnotation,
  newProps: Partial<BooleanLiteralTypeAnnotationProps>,
) => DetachedNode<BooleanLiteralTypeAnnotation>) &
  ((
    node: ?BooleanLiteralTypeAnnotation,
    newProps: Partial<BooleanLiteralTypeAnnotationProps>,
  ) => DetachedNode<BooleanLiteralTypeAnnotation> | null);
type BooleanTypeAnnotationCloneSignature = ((
  node: BooleanTypeAnnotation,
  newProps: Partial<BooleanTypeAnnotationProps>,
) => DetachedNode<BooleanTypeAnnotation>) &
  ((
    node: ?BooleanTypeAnnotation,
    newProps: Partial<BooleanTypeAnnotationProps>,
  ) => DetachedNode<BooleanTypeAnnotation> | null);
type BreakStatementCloneSignature = ((
  node: BreakStatement,
  newProps: Partial<BreakStatementProps>,
) => DetachedNode<BreakStatement>) &
  ((
    node: ?BreakStatement,
    newProps: Partial<BreakStatementProps>,
  ) => DetachedNode<BreakStatement> | null);
type CallExpressionCloneSignature = ((
  node: CallExpression,
  newProps: Partial<CallExpressionProps>,
) => DetachedNode<CallExpression>) &
  ((
    node: ?CallExpression,
    newProps: Partial<CallExpressionProps>,
  ) => DetachedNode<CallExpression> | null);
type CatchClauseCloneSignature = ((
  node: CatchClause,
  newProps: Partial<CatchClauseProps>,
) => DetachedNode<CatchClause>) &
  ((
    node: ?CatchClause,
    newProps: Partial<CatchClauseProps>,
  ) => DetachedNode<CatchClause> | null);
type ChainExpressionCloneSignature = ((
  node: ChainExpression,
  newProps: Partial<ChainExpressionProps>,
) => DetachedNode<ChainExpression>) &
  ((
    node: ?ChainExpression,
    newProps: Partial<ChainExpressionProps>,
  ) => DetachedNode<ChainExpression> | null);
type ClassBodyCloneSignature = ((
  node: ClassBody,
  newProps: Partial<ClassBodyProps>,
) => DetachedNode<ClassBody>) &
  ((
    node: ?ClassBody,
    newProps: Partial<ClassBodyProps>,
  ) => DetachedNode<ClassBody> | null);
type ClassDeclarationCloneSignature = ((
  node: ClassDeclaration,
  newProps: Partial<ClassDeclarationProps>,
) => DetachedNode<ClassDeclaration>) &
  ((
    node: ?ClassDeclaration,
    newProps: Partial<ClassDeclarationProps>,
  ) => DetachedNode<ClassDeclaration> | null);
type ClassExpressionCloneSignature = ((
  node: ClassExpression,
  newProps: Partial<ClassExpressionProps>,
) => DetachedNode<ClassExpression>) &
  ((
    node: ?ClassExpression,
    newProps: Partial<ClassExpressionProps>,
  ) => DetachedNode<ClassExpression> | null);
type ClassImplementsCloneSignature = ((
  node: ClassImplements,
  newProps: Partial<ClassImplementsProps>,
) => DetachedNode<ClassImplements>) &
  ((
    node: ?ClassImplements,
    newProps: Partial<ClassImplementsProps>,
  ) => DetachedNode<ClassImplements> | null);
type ComponentDeclarationCloneSignature = ((
  node: ComponentDeclaration,
  newProps: Partial<ComponentDeclarationProps>,
) => DetachedNode<ComponentDeclaration>) &
  ((
    node: ?ComponentDeclaration,
    newProps: Partial<ComponentDeclarationProps>,
  ) => DetachedNode<ComponentDeclaration> | null);
type ComponentParameterCloneSignature = ((
  node: ComponentParameter,
  newProps: Partial<ComponentParameterProps>,
) => DetachedNode<ComponentParameter>) &
  ((
    node: ?ComponentParameter,
    newProps: Partial<ComponentParameterProps>,
  ) => DetachedNode<ComponentParameter> | null);
type ComponentTypeAnnotationCloneSignature = ((
  node: ComponentTypeAnnotation,
  newProps: Partial<ComponentTypeAnnotationProps>,
) => DetachedNode<ComponentTypeAnnotation>) &
  ((
    node: ?ComponentTypeAnnotation,
    newProps: Partial<ComponentTypeAnnotationProps>,
  ) => DetachedNode<ComponentTypeAnnotation> | null);
type ComponentTypeParameterCloneSignature = ((
  node: ComponentTypeParameter,
  newProps: Partial<ComponentTypeParameterProps>,
) => DetachedNode<ComponentTypeParameter>) &
  ((
    node: ?ComponentTypeParameter,
    newProps: Partial<ComponentTypeParameterProps>,
  ) => DetachedNode<ComponentTypeParameter> | null);
type ConditionalExpressionCloneSignature = ((
  node: ConditionalExpression,
  newProps: Partial<ConditionalExpressionProps>,
) => DetachedNode<ConditionalExpression>) &
  ((
    node: ?ConditionalExpression,
    newProps: Partial<ConditionalExpressionProps>,
  ) => DetachedNode<ConditionalExpression> | null);
type ConditionalTypeAnnotationCloneSignature = ((
  node: ConditionalTypeAnnotation,
  newProps: Partial<ConditionalTypeAnnotationProps>,
) => DetachedNode<ConditionalTypeAnnotation>) &
  ((
    node: ?ConditionalTypeAnnotation,
    newProps: Partial<ConditionalTypeAnnotationProps>,
  ) => DetachedNode<ConditionalTypeAnnotation> | null);
type ContinueStatementCloneSignature = ((
  node: ContinueStatement,
  newProps: Partial<ContinueStatementProps>,
) => DetachedNode<ContinueStatement>) &
  ((
    node: ?ContinueStatement,
    newProps: Partial<ContinueStatementProps>,
  ) => DetachedNode<ContinueStatement> | null);
type DebuggerStatementCloneSignature = ((
  node: DebuggerStatement,
  newProps: Partial<DebuggerStatementProps>,
) => DetachedNode<DebuggerStatement>) &
  ((
    node: ?DebuggerStatement,
    newProps: Partial<DebuggerStatementProps>,
  ) => DetachedNode<DebuggerStatement> | null);
type DeclareClassCloneSignature = ((
  node: DeclareClass,
  newProps: Partial<DeclareClassProps>,
) => DetachedNode<DeclareClass>) &
  ((
    node: ?DeclareClass,
    newProps: Partial<DeclareClassProps>,
  ) => DetachedNode<DeclareClass> | null);
type DeclareComponentCloneSignature = ((
  node: DeclareComponent,
  newProps: Partial<DeclareComponentProps>,
) => DetachedNode<DeclareComponent>) &
  ((
    node: ?DeclareComponent,
    newProps: Partial<DeclareComponentProps>,
  ) => DetachedNode<DeclareComponent> | null);
type DeclaredPredicateCloneSignature = ((
  node: DeclaredPredicate,
  newProps: Partial<DeclaredPredicateProps>,
) => DetachedNode<DeclaredPredicate>) &
  ((
    node: ?DeclaredPredicate,
    newProps: Partial<DeclaredPredicateProps>,
  ) => DetachedNode<DeclaredPredicate> | null);
type DeclareEnumCloneSignature = ((
  node: DeclareEnum,
  newProps: Partial<DeclareEnumProps>,
) => DetachedNode<DeclareEnum>) &
  ((
    node: ?DeclareEnum,
    newProps: Partial<DeclareEnumProps>,
  ) => DetachedNode<DeclareEnum> | null);
type DeclareExportAllDeclarationCloneSignature = ((
  node: DeclareExportAllDeclaration,
  newProps: Partial<DeclareExportAllDeclarationProps>,
) => DetachedNode<DeclareExportAllDeclaration>) &
  ((
    node: ?DeclareExportAllDeclaration,
    newProps: Partial<DeclareExportAllDeclarationProps>,
  ) => DetachedNode<DeclareExportAllDeclaration> | null);
type DeclareExportDeclarationCloneSignature = ((
  node: DeclareExportDeclaration,
  newProps: Partial<DeclareExportDeclarationProps>,
) => DetachedNode<DeclareExportDeclaration>) &
  ((
    node: ?DeclareExportDeclaration,
    newProps: Partial<DeclareExportDeclarationProps>,
  ) => DetachedNode<DeclareExportDeclaration> | null);
type DeclareFunctionCloneSignature = ((
  node: DeclareFunction,
  newProps: Partial<DeclareFunctionProps>,
) => DetachedNode<DeclareFunction>) &
  ((
    node: ?DeclareFunction,
    newProps: Partial<DeclareFunctionProps>,
  ) => DetachedNode<DeclareFunction> | null);
type DeclareInterfaceCloneSignature = ((
  node: DeclareInterface,
  newProps: Partial<DeclareInterfaceProps>,
) => DetachedNode<DeclareInterface>) &
  ((
    node: ?DeclareInterface,
    newProps: Partial<DeclareInterfaceProps>,
  ) => DetachedNode<DeclareInterface> | null);
type DeclareModuleCloneSignature = ((
  node: DeclareModule,
  newProps: Partial<DeclareModuleProps>,
) => DetachedNode<DeclareModule>) &
  ((
    node: ?DeclareModule,
    newProps: Partial<DeclareModuleProps>,
  ) => DetachedNode<DeclareModule> | null);
type DeclareModuleExportsCloneSignature = ((
  node: DeclareModuleExports,
  newProps: Partial<DeclareModuleExportsProps>,
) => DetachedNode<DeclareModuleExports>) &
  ((
    node: ?DeclareModuleExports,
    newProps: Partial<DeclareModuleExportsProps>,
  ) => DetachedNode<DeclareModuleExports> | null);
type DeclareOpaqueTypeCloneSignature = ((
  node: DeclareOpaqueType,
  newProps: Partial<DeclareOpaqueTypeProps>,
) => DetachedNode<DeclareOpaqueType>) &
  ((
    node: ?DeclareOpaqueType,
    newProps: Partial<DeclareOpaqueTypeProps>,
  ) => DetachedNode<DeclareOpaqueType> | null);
type DeclareTypeAliasCloneSignature = ((
  node: DeclareTypeAlias,
  newProps: Partial<DeclareTypeAliasProps>,
) => DetachedNode<DeclareTypeAlias>) &
  ((
    node: ?DeclareTypeAlias,
    newProps: Partial<DeclareTypeAliasProps>,
  ) => DetachedNode<DeclareTypeAlias> | null);
type DeclareVariableCloneSignature = ((
  node: DeclareVariable,
  newProps: Partial<DeclareVariableProps>,
) => DetachedNode<DeclareVariable>) &
  ((
    node: ?DeclareVariable,
    newProps: Partial<DeclareVariableProps>,
  ) => DetachedNode<DeclareVariable> | null);
type DoWhileStatementCloneSignature = ((
  node: DoWhileStatement,
  newProps: Partial<DoWhileStatementProps>,
) => DetachedNode<DoWhileStatement>) &
  ((
    node: ?DoWhileStatement,
    newProps: Partial<DoWhileStatementProps>,
  ) => DetachedNode<DoWhileStatement> | null);
type EmptyStatementCloneSignature = ((
  node: EmptyStatement,
  newProps: Partial<EmptyStatementProps>,
) => DetachedNode<EmptyStatement>) &
  ((
    node: ?EmptyStatement,
    newProps: Partial<EmptyStatementProps>,
  ) => DetachedNode<EmptyStatement> | null);
type EmptyTypeAnnotationCloneSignature = ((
  node: EmptyTypeAnnotation,
  newProps: Partial<EmptyTypeAnnotationProps>,
) => DetachedNode<EmptyTypeAnnotation>) &
  ((
    node: ?EmptyTypeAnnotation,
    newProps: Partial<EmptyTypeAnnotationProps>,
  ) => DetachedNode<EmptyTypeAnnotation> | null);
type EnumBooleanBodyCloneSignature = ((
  node: EnumBooleanBody,
  newProps: Partial<EnumBooleanBodyProps>,
) => DetachedNode<EnumBooleanBody>) &
  ((
    node: ?EnumBooleanBody,
    newProps: Partial<EnumBooleanBodyProps>,
  ) => DetachedNode<EnumBooleanBody> | null);
type EnumBooleanMemberCloneSignature = ((
  node: EnumBooleanMember,
  newProps: Partial<EnumBooleanMemberProps>,
) => DetachedNode<EnumBooleanMember>) &
  ((
    node: ?EnumBooleanMember,
    newProps: Partial<EnumBooleanMemberProps>,
  ) => DetachedNode<EnumBooleanMember> | null);
type EnumDeclarationCloneSignature = ((
  node: EnumDeclaration,
  newProps: Partial<EnumDeclarationProps>,
) => DetachedNode<EnumDeclaration>) &
  ((
    node: ?EnumDeclaration,
    newProps: Partial<EnumDeclarationProps>,
  ) => DetachedNode<EnumDeclaration> | null);
type EnumDefaultedMemberCloneSignature = ((
  node: EnumDefaultedMember,
  newProps: Partial<EnumDefaultedMemberProps>,
) => DetachedNode<EnumDefaultedMember>) &
  ((
    node: ?EnumDefaultedMember,
    newProps: Partial<EnumDefaultedMemberProps>,
  ) => DetachedNode<EnumDefaultedMember> | null);
type EnumNumberBodyCloneSignature = ((
  node: EnumNumberBody,
  newProps: Partial<EnumNumberBodyProps>,
) => DetachedNode<EnumNumberBody>) &
  ((
    node: ?EnumNumberBody,
    newProps: Partial<EnumNumberBodyProps>,
  ) => DetachedNode<EnumNumberBody> | null);
type EnumNumberMemberCloneSignature = ((
  node: EnumNumberMember,
  newProps: Partial<EnumNumberMemberProps>,
) => DetachedNode<EnumNumberMember>) &
  ((
    node: ?EnumNumberMember,
    newProps: Partial<EnumNumberMemberProps>,
  ) => DetachedNode<EnumNumberMember> | null);
type EnumStringBodyCloneSignature = ((
  node: EnumStringBody,
  newProps: Partial<EnumStringBodyProps>,
) => DetachedNode<EnumStringBody>) &
  ((
    node: ?EnumStringBody,
    newProps: Partial<EnumStringBodyProps>,
  ) => DetachedNode<EnumStringBody> | null);
type EnumStringMemberCloneSignature = ((
  node: EnumStringMember,
  newProps: Partial<EnumStringMemberProps>,
) => DetachedNode<EnumStringMember>) &
  ((
    node: ?EnumStringMember,
    newProps: Partial<EnumStringMemberProps>,
  ) => DetachedNode<EnumStringMember> | null);
type EnumSymbolBodyCloneSignature = ((
  node: EnumSymbolBody,
  newProps: Partial<EnumSymbolBodyProps>,
) => DetachedNode<EnumSymbolBody>) &
  ((
    node: ?EnumSymbolBody,
    newProps: Partial<EnumSymbolBodyProps>,
  ) => DetachedNode<EnumSymbolBody> | null);
type ExistsTypeAnnotationCloneSignature = ((
  node: ExistsTypeAnnotation,
  newProps: Partial<ExistsTypeAnnotationProps>,
) => DetachedNode<ExistsTypeAnnotation>) &
  ((
    node: ?ExistsTypeAnnotation,
    newProps: Partial<ExistsTypeAnnotationProps>,
  ) => DetachedNode<ExistsTypeAnnotation> | null);
type ExportAllDeclarationCloneSignature = ((
  node: ExportAllDeclaration,
  newProps: Partial<ExportAllDeclarationProps>,
) => DetachedNode<ExportAllDeclaration>) &
  ((
    node: ?ExportAllDeclaration,
    newProps: Partial<ExportAllDeclarationProps>,
  ) => DetachedNode<ExportAllDeclaration> | null);
type ExportDefaultDeclarationCloneSignature = ((
  node: ExportDefaultDeclaration,
  newProps: Partial<ExportDefaultDeclarationProps>,
) => DetachedNode<ExportDefaultDeclaration>) &
  ((
    node: ?ExportDefaultDeclaration,
    newProps: Partial<ExportDefaultDeclarationProps>,
  ) => DetachedNode<ExportDefaultDeclaration> | null);
type ExportNamedDeclarationCloneSignature = ((
  node: ExportNamedDeclaration,
  newProps: Partial<ExportNamedDeclarationProps>,
) => DetachedNode<ExportNamedDeclaration>) &
  ((
    node: ?ExportNamedDeclaration,
    newProps: Partial<ExportNamedDeclarationProps>,
  ) => DetachedNode<ExportNamedDeclaration> | null);
type ExportSpecifierCloneSignature = ((
  node: ExportSpecifier,
  newProps: Partial<ExportSpecifierProps>,
) => DetachedNode<ExportSpecifier>) &
  ((
    node: ?ExportSpecifier,
    newProps: Partial<ExportSpecifierProps>,
  ) => DetachedNode<ExportSpecifier> | null);
type ExpressionStatementCloneSignature = ((
  node: ExpressionStatement,
  newProps: Partial<ExpressionStatementProps>,
) => DetachedNode<ExpressionStatement>) &
  ((
    node: ?ExpressionStatement,
    newProps: Partial<ExpressionStatementProps>,
  ) => DetachedNode<ExpressionStatement> | null);
type ForInStatementCloneSignature = ((
  node: ForInStatement,
  newProps: Partial<ForInStatementProps>,
) => DetachedNode<ForInStatement>) &
  ((
    node: ?ForInStatement,
    newProps: Partial<ForInStatementProps>,
  ) => DetachedNode<ForInStatement> | null);
type ForOfStatementCloneSignature = ((
  node: ForOfStatement,
  newProps: Partial<ForOfStatementProps>,
) => DetachedNode<ForOfStatement>) &
  ((
    node: ?ForOfStatement,
    newProps: Partial<ForOfStatementProps>,
  ) => DetachedNode<ForOfStatement> | null);
type ForStatementCloneSignature = ((
  node: ForStatement,
  newProps: Partial<ForStatementProps>,
) => DetachedNode<ForStatement>) &
  ((
    node: ?ForStatement,
    newProps: Partial<ForStatementProps>,
  ) => DetachedNode<ForStatement> | null);
type FunctionDeclarationCloneSignature = ((
  node: FunctionDeclaration,
  newProps: Partial<FunctionDeclarationProps>,
) => DetachedNode<FunctionDeclaration>) &
  ((
    node: ?FunctionDeclaration,
    newProps: Partial<FunctionDeclarationProps>,
  ) => DetachedNode<FunctionDeclaration> | null);
type FunctionExpressionCloneSignature = ((
  node: FunctionExpression,
  newProps: Partial<FunctionExpressionProps>,
) => DetachedNode<FunctionExpression>) &
  ((
    node: ?FunctionExpression,
    newProps: Partial<FunctionExpressionProps>,
  ) => DetachedNode<FunctionExpression> | null);
type FunctionTypeAnnotationCloneSignature = ((
  node: FunctionTypeAnnotation,
  newProps: Partial<FunctionTypeAnnotationProps>,
) => DetachedNode<FunctionTypeAnnotation>) &
  ((
    node: ?FunctionTypeAnnotation,
    newProps: Partial<FunctionTypeAnnotationProps>,
  ) => DetachedNode<FunctionTypeAnnotation> | null);
type FunctionTypeParamCloneSignature = ((
  node: FunctionTypeParam,
  newProps: Partial<FunctionTypeParamProps>,
) => DetachedNode<FunctionTypeParam>) &
  ((
    node: ?FunctionTypeParam,
    newProps: Partial<FunctionTypeParamProps>,
  ) => DetachedNode<FunctionTypeParam> | null);
type GenericTypeAnnotationCloneSignature = ((
  node: GenericTypeAnnotation,
  newProps: Partial<GenericTypeAnnotationProps>,
) => DetachedNode<GenericTypeAnnotation>) &
  ((
    node: ?GenericTypeAnnotation,
    newProps: Partial<GenericTypeAnnotationProps>,
  ) => DetachedNode<GenericTypeAnnotation> | null);
type IdentifierCloneSignature = ((
  node: Identifier,
  newProps: Partial<IdentifierProps>,
) => DetachedNode<Identifier>) &
  ((
    node: ?Identifier,
    newProps: Partial<IdentifierProps>,
  ) => DetachedNode<Identifier> | null);
type IfStatementCloneSignature = ((
  node: IfStatement,
  newProps: Partial<IfStatementProps>,
) => DetachedNode<IfStatement>) &
  ((
    node: ?IfStatement,
    newProps: Partial<IfStatementProps>,
  ) => DetachedNode<IfStatement> | null);
type ImportAttributeCloneSignature = ((
  node: ImportAttribute,
  newProps: Partial<ImportAttributeProps>,
) => DetachedNode<ImportAttribute>) &
  ((
    node: ?ImportAttribute,
    newProps: Partial<ImportAttributeProps>,
  ) => DetachedNode<ImportAttribute> | null);
type ImportDeclarationCloneSignature = ((
  node: ImportDeclaration,
  newProps: Partial<ImportDeclarationProps>,
) => DetachedNode<ImportDeclaration>) &
  ((
    node: ?ImportDeclaration,
    newProps: Partial<ImportDeclarationProps>,
  ) => DetachedNode<ImportDeclaration> | null);
type ImportDefaultSpecifierCloneSignature = ((
  node: ImportDefaultSpecifier,
  newProps: Partial<ImportDefaultSpecifierProps>,
) => DetachedNode<ImportDefaultSpecifier>) &
  ((
    node: ?ImportDefaultSpecifier,
    newProps: Partial<ImportDefaultSpecifierProps>,
  ) => DetachedNode<ImportDefaultSpecifier> | null);
type ImportExpressionCloneSignature = ((
  node: ImportExpression,
  newProps: Partial<ImportExpressionProps>,
) => DetachedNode<ImportExpression>) &
  ((
    node: ?ImportExpression,
    newProps: Partial<ImportExpressionProps>,
  ) => DetachedNode<ImportExpression> | null);
type ImportNamespaceSpecifierCloneSignature = ((
  node: ImportNamespaceSpecifier,
  newProps: Partial<ImportNamespaceSpecifierProps>,
) => DetachedNode<ImportNamespaceSpecifier>) &
  ((
    node: ?ImportNamespaceSpecifier,
    newProps: Partial<ImportNamespaceSpecifierProps>,
  ) => DetachedNode<ImportNamespaceSpecifier> | null);
type ImportSpecifierCloneSignature = ((
  node: ImportSpecifier,
  newProps: Partial<ImportSpecifierProps>,
) => DetachedNode<ImportSpecifier>) &
  ((
    node: ?ImportSpecifier,
    newProps: Partial<ImportSpecifierProps>,
  ) => DetachedNode<ImportSpecifier> | null);
type IndexedAccessTypeCloneSignature = ((
  node: IndexedAccessType,
  newProps: Partial<IndexedAccessTypeProps>,
) => DetachedNode<IndexedAccessType>) &
  ((
    node: ?IndexedAccessType,
    newProps: Partial<IndexedAccessTypeProps>,
  ) => DetachedNode<IndexedAccessType> | null);
type InferredPredicateCloneSignature = ((
  node: InferredPredicate,
  newProps: Partial<InferredPredicateProps>,
) => DetachedNode<InferredPredicate>) &
  ((
    node: ?InferredPredicate,
    newProps: Partial<InferredPredicateProps>,
  ) => DetachedNode<InferredPredicate> | null);
type InferTypeAnnotationCloneSignature = ((
  node: InferTypeAnnotation,
  newProps: Partial<InferTypeAnnotationProps>,
) => DetachedNode<InferTypeAnnotation>) &
  ((
    node: ?InferTypeAnnotation,
    newProps: Partial<InferTypeAnnotationProps>,
  ) => DetachedNode<InferTypeAnnotation> | null);
type InterfaceDeclarationCloneSignature = ((
  node: InterfaceDeclaration,
  newProps: Partial<InterfaceDeclarationProps>,
) => DetachedNode<InterfaceDeclaration>) &
  ((
    node: ?InterfaceDeclaration,
    newProps: Partial<InterfaceDeclarationProps>,
  ) => DetachedNode<InterfaceDeclaration> | null);
type InterfaceExtendsCloneSignature = ((
  node: InterfaceExtends,
  newProps: Partial<InterfaceExtendsProps>,
) => DetachedNode<InterfaceExtends>) &
  ((
    node: ?InterfaceExtends,
    newProps: Partial<InterfaceExtendsProps>,
  ) => DetachedNode<InterfaceExtends> | null);
type InterfaceTypeAnnotationCloneSignature = ((
  node: InterfaceTypeAnnotation,
  newProps: Partial<InterfaceTypeAnnotationProps>,
) => DetachedNode<InterfaceTypeAnnotation>) &
  ((
    node: ?InterfaceTypeAnnotation,
    newProps: Partial<InterfaceTypeAnnotationProps>,
  ) => DetachedNode<InterfaceTypeAnnotation> | null);
type IntersectionTypeAnnotationCloneSignature = ((
  node: IntersectionTypeAnnotation,
  newProps: Partial<IntersectionTypeAnnotationProps>,
) => DetachedNode<IntersectionTypeAnnotation>) &
  ((
    node: ?IntersectionTypeAnnotation,
    newProps: Partial<IntersectionTypeAnnotationProps>,
  ) => DetachedNode<IntersectionTypeAnnotation> | null);
type JSXAttributeCloneSignature = ((
  node: JSXAttribute,
  newProps: Partial<JSXAttributeProps>,
) => DetachedNode<JSXAttribute>) &
  ((
    node: ?JSXAttribute,
    newProps: Partial<JSXAttributeProps>,
  ) => DetachedNode<JSXAttribute> | null);
type JSXClosingElementCloneSignature = ((
  node: JSXClosingElement,
  newProps: Partial<JSXClosingElementProps>,
) => DetachedNode<JSXClosingElement>) &
  ((
    node: ?JSXClosingElement,
    newProps: Partial<JSXClosingElementProps>,
  ) => DetachedNode<JSXClosingElement> | null);
type JSXClosingFragmentCloneSignature = ((
  node: JSXClosingFragment,
  newProps: Partial<JSXClosingFragmentProps>,
) => DetachedNode<JSXClosingFragment>) &
  ((
    node: ?JSXClosingFragment,
    newProps: Partial<JSXClosingFragmentProps>,
  ) => DetachedNode<JSXClosingFragment> | null);
type JSXElementCloneSignature = ((
  node: JSXElement,
  newProps: Partial<JSXElementProps>,
) => DetachedNode<JSXElement>) &
  ((
    node: ?JSXElement,
    newProps: Partial<JSXElementProps>,
  ) => DetachedNode<JSXElement> | null);
type JSXEmptyExpressionCloneSignature = ((
  node: JSXEmptyExpression,
  newProps: Partial<JSXEmptyExpressionProps>,
) => DetachedNode<JSXEmptyExpression>) &
  ((
    node: ?JSXEmptyExpression,
    newProps: Partial<JSXEmptyExpressionProps>,
  ) => DetachedNode<JSXEmptyExpression> | null);
type JSXExpressionContainerCloneSignature = ((
  node: JSXExpressionContainer,
  newProps: Partial<JSXExpressionContainerProps>,
) => DetachedNode<JSXExpressionContainer>) &
  ((
    node: ?JSXExpressionContainer,
    newProps: Partial<JSXExpressionContainerProps>,
  ) => DetachedNode<JSXExpressionContainer> | null);
type JSXFragmentCloneSignature = ((
  node: JSXFragment,
  newProps: Partial<JSXFragmentProps>,
) => DetachedNode<JSXFragment>) &
  ((
    node: ?JSXFragment,
    newProps: Partial<JSXFragmentProps>,
  ) => DetachedNode<JSXFragment> | null);
type JSXIdentifierCloneSignature = ((
  node: JSXIdentifier,
  newProps: Partial<JSXIdentifierProps>,
) => DetachedNode<JSXIdentifier>) &
  ((
    node: ?JSXIdentifier,
    newProps: Partial<JSXIdentifierProps>,
  ) => DetachedNode<JSXIdentifier> | null);
type JSXMemberExpressionCloneSignature = ((
  node: JSXMemberExpression,
  newProps: Partial<JSXMemberExpressionProps>,
) => DetachedNode<JSXMemberExpression>) &
  ((
    node: ?JSXMemberExpression,
    newProps: Partial<JSXMemberExpressionProps>,
  ) => DetachedNode<JSXMemberExpression> | null);
type JSXNamespacedNameCloneSignature = ((
  node: JSXNamespacedName,
  newProps: Partial<JSXNamespacedNameProps>,
) => DetachedNode<JSXNamespacedName>) &
  ((
    node: ?JSXNamespacedName,
    newProps: Partial<JSXNamespacedNameProps>,
  ) => DetachedNode<JSXNamespacedName> | null);
type JSXOpeningElementCloneSignature = ((
  node: JSXOpeningElement,
  newProps: Partial<JSXOpeningElementProps>,
) => DetachedNode<JSXOpeningElement>) &
  ((
    node: ?JSXOpeningElement,
    newProps: Partial<JSXOpeningElementProps>,
  ) => DetachedNode<JSXOpeningElement> | null);
type JSXOpeningFragmentCloneSignature = ((
  node: JSXOpeningFragment,
  newProps: Partial<JSXOpeningFragmentProps>,
) => DetachedNode<JSXOpeningFragment>) &
  ((
    node: ?JSXOpeningFragment,
    newProps: Partial<JSXOpeningFragmentProps>,
  ) => DetachedNode<JSXOpeningFragment> | null);
type JSXSpreadAttributeCloneSignature = ((
  node: JSXSpreadAttribute,
  newProps: Partial<JSXSpreadAttributeProps>,
) => DetachedNode<JSXSpreadAttribute>) &
  ((
    node: ?JSXSpreadAttribute,
    newProps: Partial<JSXSpreadAttributeProps>,
  ) => DetachedNode<JSXSpreadAttribute> | null);
type JSXSpreadChildCloneSignature = ((
  node: JSXSpreadChild,
  newProps: Partial<JSXSpreadChildProps>,
) => DetachedNode<JSXSpreadChild>) &
  ((
    node: ?JSXSpreadChild,
    newProps: Partial<JSXSpreadChildProps>,
  ) => DetachedNode<JSXSpreadChild> | null);
type JSXTextCloneSignature = ((
  node: JSXText,
  newProps: Partial<JSXTextProps>,
) => DetachedNode<JSXText>) &
  ((
    node: ?JSXText,
    newProps: Partial<JSXTextProps>,
  ) => DetachedNode<JSXText> | null);
type KeyofTypeAnnotationCloneSignature = ((
  node: KeyofTypeAnnotation,
  newProps: Partial<KeyofTypeAnnotationProps>,
) => DetachedNode<KeyofTypeAnnotation>) &
  ((
    node: ?KeyofTypeAnnotation,
    newProps: Partial<KeyofTypeAnnotationProps>,
  ) => DetachedNode<KeyofTypeAnnotation> | null);
type LabeledStatementCloneSignature = ((
  node: LabeledStatement,
  newProps: Partial<LabeledStatementProps>,
) => DetachedNode<LabeledStatement>) &
  ((
    node: ?LabeledStatement,
    newProps: Partial<LabeledStatementProps>,
  ) => DetachedNode<LabeledStatement> | null);
type LogicalExpressionCloneSignature = ((
  node: LogicalExpression,
  newProps: Partial<LogicalExpressionProps>,
) => DetachedNode<LogicalExpression>) &
  ((
    node: ?LogicalExpression,
    newProps: Partial<LogicalExpressionProps>,
  ) => DetachedNode<LogicalExpression> | null);
type MemberExpressionCloneSignature = ((
  node: MemberExpression,
  newProps: Partial<MemberExpressionProps>,
) => DetachedNode<MemberExpression>) &
  ((
    node: ?MemberExpression,
    newProps: Partial<MemberExpressionProps>,
  ) => DetachedNode<MemberExpression> | null);
type MetaPropertyCloneSignature = ((
  node: MetaProperty,
  newProps: Partial<MetaPropertyProps>,
) => DetachedNode<MetaProperty>) &
  ((
    node: ?MetaProperty,
    newProps: Partial<MetaPropertyProps>,
  ) => DetachedNode<MetaProperty> | null);
type MethodDefinitionCloneSignature = ((
  node: MethodDefinition,
  newProps: Partial<MethodDefinitionProps>,
) => DetachedNode<MethodDefinition>) &
  ((
    node: ?MethodDefinition,
    newProps: Partial<MethodDefinitionProps>,
  ) => DetachedNode<MethodDefinition> | null);
type MixedTypeAnnotationCloneSignature = ((
  node: MixedTypeAnnotation,
  newProps: Partial<MixedTypeAnnotationProps>,
) => DetachedNode<MixedTypeAnnotation>) &
  ((
    node: ?MixedTypeAnnotation,
    newProps: Partial<MixedTypeAnnotationProps>,
  ) => DetachedNode<MixedTypeAnnotation> | null);
type NewExpressionCloneSignature = ((
  node: NewExpression,
  newProps: Partial<NewExpressionProps>,
) => DetachedNode<NewExpression>) &
  ((
    node: ?NewExpression,
    newProps: Partial<NewExpressionProps>,
  ) => DetachedNode<NewExpression> | null);
type NullableTypeAnnotationCloneSignature = ((
  node: NullableTypeAnnotation,
  newProps: Partial<NullableTypeAnnotationProps>,
) => DetachedNode<NullableTypeAnnotation>) &
  ((
    node: ?NullableTypeAnnotation,
    newProps: Partial<NullableTypeAnnotationProps>,
  ) => DetachedNode<NullableTypeAnnotation> | null);
type NullLiteralCloneSignature = ((
  node: NullLiteral,
  newProps: Partial<NullLiteralProps>,
) => DetachedNode<NullLiteral>) &
  ((
    node: ?NullLiteral,
    newProps: Partial<NullLiteralProps>,
  ) => DetachedNode<NullLiteral> | null);
type NullLiteralTypeAnnotationCloneSignature = ((
  node: NullLiteralTypeAnnotation,
  newProps: Partial<NullLiteralTypeAnnotationProps>,
) => DetachedNode<NullLiteralTypeAnnotation>) &
  ((
    node: ?NullLiteralTypeAnnotation,
    newProps: Partial<NullLiteralTypeAnnotationProps>,
  ) => DetachedNode<NullLiteralTypeAnnotation> | null);
type NumberLiteralTypeAnnotationCloneSignature = ((
  node: NumberLiteralTypeAnnotation,
  newProps: Partial<NumberLiteralTypeAnnotationProps>,
) => DetachedNode<NumberLiteralTypeAnnotation>) &
  ((
    node: ?NumberLiteralTypeAnnotation,
    newProps: Partial<NumberLiteralTypeAnnotationProps>,
  ) => DetachedNode<NumberLiteralTypeAnnotation> | null);
type NumberTypeAnnotationCloneSignature = ((
  node: NumberTypeAnnotation,
  newProps: Partial<NumberTypeAnnotationProps>,
) => DetachedNode<NumberTypeAnnotation>) &
  ((
    node: ?NumberTypeAnnotation,
    newProps: Partial<NumberTypeAnnotationProps>,
  ) => DetachedNode<NumberTypeAnnotation> | null);
type NumericLiteralCloneSignature = ((
  node: NumericLiteral,
  newProps: Partial<NumericLiteralProps>,
) => DetachedNode<NumericLiteral>) &
  ((
    node: ?NumericLiteral,
    newProps: Partial<NumericLiteralProps>,
  ) => DetachedNode<NumericLiteral> | null);
type ObjectExpressionCloneSignature = ((
  node: ObjectExpression,
  newProps: Partial<ObjectExpressionProps>,
) => DetachedNode<ObjectExpression>) &
  ((
    node: ?ObjectExpression,
    newProps: Partial<ObjectExpressionProps>,
  ) => DetachedNode<ObjectExpression> | null);
type ObjectPatternCloneSignature = ((
  node: ObjectPattern,
  newProps: Partial<ObjectPatternProps>,
) => DetachedNode<ObjectPattern>) &
  ((
    node: ?ObjectPattern,
    newProps: Partial<ObjectPatternProps>,
  ) => DetachedNode<ObjectPattern> | null);
type ObjectTypeAnnotationCloneSignature = ((
  node: ObjectTypeAnnotation,
  newProps: Partial<ObjectTypeAnnotationProps>,
) => DetachedNode<ObjectTypeAnnotation>) &
  ((
    node: ?ObjectTypeAnnotation,
    newProps: Partial<ObjectTypeAnnotationProps>,
  ) => DetachedNode<ObjectTypeAnnotation> | null);
type ObjectTypeCallPropertyCloneSignature = ((
  node: ObjectTypeCallProperty,
  newProps: Partial<ObjectTypeCallPropertyProps>,
) => DetachedNode<ObjectTypeCallProperty>) &
  ((
    node: ?ObjectTypeCallProperty,
    newProps: Partial<ObjectTypeCallPropertyProps>,
  ) => DetachedNode<ObjectTypeCallProperty> | null);
type ObjectTypeIndexerCloneSignature = ((
  node: ObjectTypeIndexer,
  newProps: Partial<ObjectTypeIndexerProps>,
) => DetachedNode<ObjectTypeIndexer>) &
  ((
    node: ?ObjectTypeIndexer,
    newProps: Partial<ObjectTypeIndexerProps>,
  ) => DetachedNode<ObjectTypeIndexer> | null);
type ObjectTypeInternalSlotCloneSignature = ((
  node: ObjectTypeInternalSlot,
  newProps: Partial<ObjectTypeInternalSlotProps>,
) => DetachedNode<ObjectTypeInternalSlot>) &
  ((
    node: ?ObjectTypeInternalSlot,
    newProps: Partial<ObjectTypeInternalSlotProps>,
  ) => DetachedNode<ObjectTypeInternalSlot> | null);
type ObjectTypeMappedTypePropertyCloneSignature = ((
  node: ObjectTypeMappedTypeProperty,
  newProps: Partial<ObjectTypeMappedTypePropertyProps>,
) => DetachedNode<ObjectTypeMappedTypeProperty>) &
  ((
    node: ?ObjectTypeMappedTypeProperty,
    newProps: Partial<ObjectTypeMappedTypePropertyProps>,
  ) => DetachedNode<ObjectTypeMappedTypeProperty> | null);
type ObjectTypePropertyCloneSignature = ((
  node: ObjectTypeProperty,
  newProps: Partial<ObjectTypePropertyProps>,
) => DetachedNode<ObjectTypeProperty>) &
  ((
    node: ?ObjectTypeProperty,
    newProps: Partial<ObjectTypePropertyProps>,
  ) => DetachedNode<ObjectTypeProperty> | null);
type ObjectTypeSpreadPropertyCloneSignature = ((
  node: ObjectTypeSpreadProperty,
  newProps: Partial<ObjectTypeSpreadPropertyProps>,
) => DetachedNode<ObjectTypeSpreadProperty>) &
  ((
    node: ?ObjectTypeSpreadProperty,
    newProps: Partial<ObjectTypeSpreadPropertyProps>,
  ) => DetachedNode<ObjectTypeSpreadProperty> | null);
type OpaqueTypeCloneSignature = ((
  node: OpaqueType,
  newProps: Partial<OpaqueTypeProps>,
) => DetachedNode<OpaqueType>) &
  ((
    node: ?OpaqueType,
    newProps: Partial<OpaqueTypeProps>,
  ) => DetachedNode<OpaqueType> | null);
type OptionalIndexedAccessTypeCloneSignature = ((
  node: OptionalIndexedAccessType,
  newProps: Partial<OptionalIndexedAccessTypeProps>,
) => DetachedNode<OptionalIndexedAccessType>) &
  ((
    node: ?OptionalIndexedAccessType,
    newProps: Partial<OptionalIndexedAccessTypeProps>,
  ) => DetachedNode<OptionalIndexedAccessType> | null);
type PrivateIdentifierCloneSignature = ((
  node: PrivateIdentifier,
  newProps: Partial<PrivateIdentifierProps>,
) => DetachedNode<PrivateIdentifier>) &
  ((
    node: ?PrivateIdentifier,
    newProps: Partial<PrivateIdentifierProps>,
  ) => DetachedNode<PrivateIdentifier> | null);
type PropertyCloneSignature = ((
  node: Property,
  newProps: Partial<PropertyProps>,
) => DetachedNode<Property>) &
  ((
    node: ?Property,
    newProps: Partial<PropertyProps>,
  ) => DetachedNode<Property> | null);
type PropertyDefinitionCloneSignature = ((
  node: PropertyDefinition,
  newProps: Partial<PropertyDefinitionProps>,
) => DetachedNode<PropertyDefinition>) &
  ((
    node: ?PropertyDefinition,
    newProps: Partial<PropertyDefinitionProps>,
  ) => DetachedNode<PropertyDefinition> | null);
type QualifiedTypeIdentifierCloneSignature = ((
  node: QualifiedTypeIdentifier,
  newProps: Partial<QualifiedTypeIdentifierProps>,
) => DetachedNode<QualifiedTypeIdentifier>) &
  ((
    node: ?QualifiedTypeIdentifier,
    newProps: Partial<QualifiedTypeIdentifierProps>,
  ) => DetachedNode<QualifiedTypeIdentifier> | null);
type QualifiedTypeofIdentifierCloneSignature = ((
  node: QualifiedTypeofIdentifier,
  newProps: Partial<QualifiedTypeofIdentifierProps>,
) => DetachedNode<QualifiedTypeofIdentifier>) &
  ((
    node: ?QualifiedTypeofIdentifier,
    newProps: Partial<QualifiedTypeofIdentifierProps>,
  ) => DetachedNode<QualifiedTypeofIdentifier> | null);
type RegExpLiteralCloneSignature = ((
  node: RegExpLiteral,
  newProps: Partial<RegExpLiteralProps>,
) => DetachedNode<RegExpLiteral>) &
  ((
    node: ?RegExpLiteral,
    newProps: Partial<RegExpLiteralProps>,
  ) => DetachedNode<RegExpLiteral> | null);
type RestElementCloneSignature = ((
  node: RestElement,
  newProps: Partial<RestElementProps>,
) => DetachedNode<RestElement>) &
  ((
    node: ?RestElement,
    newProps: Partial<RestElementProps>,
  ) => DetachedNode<RestElement> | null);
type ReturnStatementCloneSignature = ((
  node: ReturnStatement,
  newProps: Partial<ReturnStatementProps>,
) => DetachedNode<ReturnStatement>) &
  ((
    node: ?ReturnStatement,
    newProps: Partial<ReturnStatementProps>,
  ) => DetachedNode<ReturnStatement> | null);
type SequenceExpressionCloneSignature = ((
  node: SequenceExpression,
  newProps: Partial<SequenceExpressionProps>,
) => DetachedNode<SequenceExpression>) &
  ((
    node: ?SequenceExpression,
    newProps: Partial<SequenceExpressionProps>,
  ) => DetachedNode<SequenceExpression> | null);
type SpreadElementCloneSignature = ((
  node: SpreadElement,
  newProps: Partial<SpreadElementProps>,
) => DetachedNode<SpreadElement>) &
  ((
    node: ?SpreadElement,
    newProps: Partial<SpreadElementProps>,
  ) => DetachedNode<SpreadElement> | null);
type StringLiteralCloneSignature = ((
  node: StringLiteral,
  newProps: Partial<StringLiteralProps>,
) => DetachedNode<StringLiteral>) &
  ((
    node: ?StringLiteral,
    newProps: Partial<StringLiteralProps>,
  ) => DetachedNode<StringLiteral> | null);
type StringLiteralTypeAnnotationCloneSignature = ((
  node: StringLiteralTypeAnnotation,
  newProps: Partial<StringLiteralTypeAnnotationProps>,
) => DetachedNode<StringLiteralTypeAnnotation>) &
  ((
    node: ?StringLiteralTypeAnnotation,
    newProps: Partial<StringLiteralTypeAnnotationProps>,
  ) => DetachedNode<StringLiteralTypeAnnotation> | null);
type StringTypeAnnotationCloneSignature = ((
  node: StringTypeAnnotation,
  newProps: Partial<StringTypeAnnotationProps>,
) => DetachedNode<StringTypeAnnotation>) &
  ((
    node: ?StringTypeAnnotation,
    newProps: Partial<StringTypeAnnotationProps>,
  ) => DetachedNode<StringTypeAnnotation> | null);
type SuperCloneSignature = ((
  node: Super,
  newProps: Partial<SuperProps>,
) => DetachedNode<Super>) &
  ((node: ?Super, newProps: Partial<SuperProps>) => DetachedNode<Super> | null);
type SwitchCaseCloneSignature = ((
  node: SwitchCase,
  newProps: Partial<SwitchCaseProps>,
) => DetachedNode<SwitchCase>) &
  ((
    node: ?SwitchCase,
    newProps: Partial<SwitchCaseProps>,
  ) => DetachedNode<SwitchCase> | null);
type SwitchStatementCloneSignature = ((
  node: SwitchStatement,
  newProps: Partial<SwitchStatementProps>,
) => DetachedNode<SwitchStatement>) &
  ((
    node: ?SwitchStatement,
    newProps: Partial<SwitchStatementProps>,
  ) => DetachedNode<SwitchStatement> | null);
type SymbolTypeAnnotationCloneSignature = ((
  node: SymbolTypeAnnotation,
  newProps: Partial<SymbolTypeAnnotationProps>,
) => DetachedNode<SymbolTypeAnnotation>) &
  ((
    node: ?SymbolTypeAnnotation,
    newProps: Partial<SymbolTypeAnnotationProps>,
  ) => DetachedNode<SymbolTypeAnnotation> | null);
type TaggedTemplateExpressionCloneSignature = ((
  node: TaggedTemplateExpression,
  newProps: Partial<TaggedTemplateExpressionProps>,
) => DetachedNode<TaggedTemplateExpression>) &
  ((
    node: ?TaggedTemplateExpression,
    newProps: Partial<TaggedTemplateExpressionProps>,
  ) => DetachedNode<TaggedTemplateExpression> | null);
type TemplateElementCloneSignature = ((
  node: TemplateElement,
  newProps: Partial<TemplateElementProps>,
) => DetachedNode<TemplateElement>) &
  ((
    node: ?TemplateElement,
    newProps: Partial<TemplateElementProps>,
  ) => DetachedNode<TemplateElement> | null);
type TemplateLiteralCloneSignature = ((
  node: TemplateLiteral,
  newProps: Partial<TemplateLiteralProps>,
) => DetachedNode<TemplateLiteral>) &
  ((
    node: ?TemplateLiteral,
    newProps: Partial<TemplateLiteralProps>,
  ) => DetachedNode<TemplateLiteral> | null);
type ThisExpressionCloneSignature = ((
  node: ThisExpression,
  newProps: Partial<ThisExpressionProps>,
) => DetachedNode<ThisExpression>) &
  ((
    node: ?ThisExpression,
    newProps: Partial<ThisExpressionProps>,
  ) => DetachedNode<ThisExpression> | null);
type ThisTypeAnnotationCloneSignature = ((
  node: ThisTypeAnnotation,
  newProps: Partial<ThisTypeAnnotationProps>,
) => DetachedNode<ThisTypeAnnotation>) &
  ((
    node: ?ThisTypeAnnotation,
    newProps: Partial<ThisTypeAnnotationProps>,
  ) => DetachedNode<ThisTypeAnnotation> | null);
type ThrowStatementCloneSignature = ((
  node: ThrowStatement,
  newProps: Partial<ThrowStatementProps>,
) => DetachedNode<ThrowStatement>) &
  ((
    node: ?ThrowStatement,
    newProps: Partial<ThrowStatementProps>,
  ) => DetachedNode<ThrowStatement> | null);
type TryStatementCloneSignature = ((
  node: TryStatement,
  newProps: Partial<TryStatementProps>,
) => DetachedNode<TryStatement>) &
  ((
    node: ?TryStatement,
    newProps: Partial<TryStatementProps>,
  ) => DetachedNode<TryStatement> | null);
type TupleTypeAnnotationCloneSignature = ((
  node: TupleTypeAnnotation,
  newProps: Partial<TupleTypeAnnotationProps>,
) => DetachedNode<TupleTypeAnnotation>) &
  ((
    node: ?TupleTypeAnnotation,
    newProps: Partial<TupleTypeAnnotationProps>,
  ) => DetachedNode<TupleTypeAnnotation> | null);
type TupleTypeLabeledElementCloneSignature = ((
  node: TupleTypeLabeledElement,
  newProps: Partial<TupleTypeLabeledElementProps>,
) => DetachedNode<TupleTypeLabeledElement>) &
  ((
    node: ?TupleTypeLabeledElement,
    newProps: Partial<TupleTypeLabeledElementProps>,
  ) => DetachedNode<TupleTypeLabeledElement> | null);
type TupleTypeSpreadElementCloneSignature = ((
  node: TupleTypeSpreadElement,
  newProps: Partial<TupleTypeSpreadElementProps>,
) => DetachedNode<TupleTypeSpreadElement>) &
  ((
    node: ?TupleTypeSpreadElement,
    newProps: Partial<TupleTypeSpreadElementProps>,
  ) => DetachedNode<TupleTypeSpreadElement> | null);
type TypeAliasCloneSignature = ((
  node: TypeAlias,
  newProps: Partial<TypeAliasProps>,
) => DetachedNode<TypeAlias>) &
  ((
    node: ?TypeAlias,
    newProps: Partial<TypeAliasProps>,
  ) => DetachedNode<TypeAlias> | null);
type TypeAnnotationCloneSignature = ((
  node: TypeAnnotation,
  newProps: Partial<TypeAnnotationProps>,
) => DetachedNode<TypeAnnotation>) &
  ((
    node: ?TypeAnnotation,
    newProps: Partial<TypeAnnotationProps>,
  ) => DetachedNode<TypeAnnotation> | null);
type TypeCastExpressionCloneSignature = ((
  node: TypeCastExpression,
  newProps: Partial<TypeCastExpressionProps>,
) => DetachedNode<TypeCastExpression>) &
  ((
    node: ?TypeCastExpression,
    newProps: Partial<TypeCastExpressionProps>,
  ) => DetachedNode<TypeCastExpression> | null);
type TypeofTypeAnnotationCloneSignature = ((
  node: TypeofTypeAnnotation,
  newProps: Partial<TypeofTypeAnnotationProps>,
) => DetachedNode<TypeofTypeAnnotation>) &
  ((
    node: ?TypeofTypeAnnotation,
    newProps: Partial<TypeofTypeAnnotationProps>,
  ) => DetachedNode<TypeofTypeAnnotation> | null);
type TypeOperatorCloneSignature = ((
  node: TypeOperator,
  newProps: Partial<TypeOperatorProps>,
) => DetachedNode<TypeOperator>) &
  ((
    node: ?TypeOperator,
    newProps: Partial<TypeOperatorProps>,
  ) => DetachedNode<TypeOperator> | null);
type TypeParameterCloneSignature = ((
  node: TypeParameter,
  newProps: Partial<TypeParameterProps>,
) => DetachedNode<TypeParameter>) &
  ((
    node: ?TypeParameter,
    newProps: Partial<TypeParameterProps>,
  ) => DetachedNode<TypeParameter> | null);
type TypeParameterDeclarationCloneSignature = ((
  node: TypeParameterDeclaration,
  newProps: Partial<TypeParameterDeclarationProps>,
) => DetachedNode<TypeParameterDeclaration>) &
  ((
    node: ?TypeParameterDeclaration,
    newProps: Partial<TypeParameterDeclarationProps>,
  ) => DetachedNode<TypeParameterDeclaration> | null);
type TypeParameterInstantiationCloneSignature = ((
  node: TypeParameterInstantiation,
  newProps: Partial<TypeParameterInstantiationProps>,
) => DetachedNode<TypeParameterInstantiation>) &
  ((
    node: ?TypeParameterInstantiation,
    newProps: Partial<TypeParameterInstantiationProps>,
  ) => DetachedNode<TypeParameterInstantiation> | null);
type TypePredicateCloneSignature = ((
  node: TypePredicate,
  newProps: Partial<TypePredicateProps>,
) => DetachedNode<TypePredicate>) &
  ((
    node: ?TypePredicate,
    newProps: Partial<TypePredicateProps>,
  ) => DetachedNode<TypePredicate> | null);
type UnaryExpressionCloneSignature = ((
  node: UnaryExpression,
  newProps: Partial<UnaryExpressionProps>,
) => DetachedNode<UnaryExpression>) &
  ((
    node: ?UnaryExpression,
    newProps: Partial<UnaryExpressionProps>,
  ) => DetachedNode<UnaryExpression> | null);
type UnionTypeAnnotationCloneSignature = ((
  node: UnionTypeAnnotation,
  newProps: Partial<UnionTypeAnnotationProps>,
) => DetachedNode<UnionTypeAnnotation>) &
  ((
    node: ?UnionTypeAnnotation,
    newProps: Partial<UnionTypeAnnotationProps>,
  ) => DetachedNode<UnionTypeAnnotation> | null);
type UpdateExpressionCloneSignature = ((
  node: UpdateExpression,
  newProps: Partial<UpdateExpressionProps>,
) => DetachedNode<UpdateExpression>) &
  ((
    node: ?UpdateExpression,
    newProps: Partial<UpdateExpressionProps>,
  ) => DetachedNode<UpdateExpression> | null);
type VariableDeclarationCloneSignature = ((
  node: VariableDeclaration,
  newProps: Partial<VariableDeclarationProps>,
) => DetachedNode<VariableDeclaration>) &
  ((
    node: ?VariableDeclaration,
    newProps: Partial<VariableDeclarationProps>,
  ) => DetachedNode<VariableDeclaration> | null);
type VariableDeclaratorCloneSignature = ((
  node: VariableDeclarator,
  newProps: Partial<VariableDeclaratorProps>,
) => DetachedNode<VariableDeclarator>) &
  ((
    node: ?VariableDeclarator,
    newProps: Partial<VariableDeclaratorProps>,
  ) => DetachedNode<VariableDeclarator> | null);
type VarianceCloneSignature = ((
  node: Variance,
  newProps: Partial<VarianceProps>,
) => DetachedNode<Variance>) &
  ((
    node: ?Variance,
    newProps: Partial<VarianceProps>,
  ) => DetachedNode<Variance> | null);
type VoidTypeAnnotationCloneSignature = ((
  node: VoidTypeAnnotation,
  newProps: Partial<VoidTypeAnnotationProps>,
) => DetachedNode<VoidTypeAnnotation>) &
  ((
    node: ?VoidTypeAnnotation,
    newProps: Partial<VoidTypeAnnotationProps>,
  ) => DetachedNode<VoidTypeAnnotation> | null);
type WhileStatementCloneSignature = ((
  node: WhileStatement,
  newProps: Partial<WhileStatementProps>,
) => DetachedNode<WhileStatement>) &
  ((
    node: ?WhileStatement,
    newProps: Partial<WhileStatementProps>,
  ) => DetachedNode<WhileStatement> | null);
type WithStatementCloneSignature = ((
  node: WithStatement,
  newProps: Partial<WithStatementProps>,
) => DetachedNode<WithStatement>) &
  ((
    node: ?WithStatement,
    newProps: Partial<WithStatementProps>,
  ) => DetachedNode<WithStatement> | null);
type YieldExpressionCloneSignature = ((
  node: YieldExpression,
  newProps: Partial<YieldExpressionProps>,
) => DetachedNode<YieldExpression>) &
  ((
    node: ?YieldExpression,
    newProps: Partial<YieldExpressionProps>,
  ) => DetachedNode<YieldExpression> | null);
export type TransformCloneSignatures = AnyTypeAnnotationCloneSignature &
  ArrayExpressionCloneSignature &
  ArrayPatternCloneSignature &
  ArrayTypeAnnotationCloneSignature &
  ArrowFunctionExpressionCloneSignature &
  AsExpressionCloneSignature &
  AssignmentExpressionCloneSignature &
  AssignmentPatternCloneSignature &
  AwaitExpressionCloneSignature &
  BigIntLiteralCloneSignature &
  BigIntLiteralTypeAnnotationCloneSignature &
  BigIntTypeAnnotationCloneSignature &
  BinaryExpressionCloneSignature &
  BlockStatementCloneSignature &
  BooleanLiteralCloneSignature &
  BooleanLiteralTypeAnnotationCloneSignature &
  BooleanTypeAnnotationCloneSignature &
  BreakStatementCloneSignature &
  CallExpressionCloneSignature &
  CatchClauseCloneSignature &
  ChainExpressionCloneSignature &
  ClassBodyCloneSignature &
  ClassDeclarationCloneSignature &
  ClassExpressionCloneSignature &
  ClassImplementsCloneSignature &
  ComponentDeclarationCloneSignature &
  ComponentParameterCloneSignature &
  ComponentTypeAnnotationCloneSignature &
  ComponentTypeParameterCloneSignature &
  ConditionalExpressionCloneSignature &
  ConditionalTypeAnnotationCloneSignature &
  ContinueStatementCloneSignature &
  DebuggerStatementCloneSignature &
  DeclareClassCloneSignature &
  DeclareComponentCloneSignature &
  DeclaredPredicateCloneSignature &
  DeclareEnumCloneSignature &
  DeclareExportAllDeclarationCloneSignature &
  DeclareExportDeclarationCloneSignature &
  DeclareFunctionCloneSignature &
  DeclareInterfaceCloneSignature &
  DeclareModuleCloneSignature &
  DeclareModuleExportsCloneSignature &
  DeclareOpaqueTypeCloneSignature &
  DeclareTypeAliasCloneSignature &
  DeclareVariableCloneSignature &
  DoWhileStatementCloneSignature &
  EmptyStatementCloneSignature &
  EmptyTypeAnnotationCloneSignature &
  EnumBooleanBodyCloneSignature &
  EnumBooleanMemberCloneSignature &
  EnumDeclarationCloneSignature &
  EnumDefaultedMemberCloneSignature &
  EnumNumberBodyCloneSignature &
  EnumNumberMemberCloneSignature &
  EnumStringBodyCloneSignature &
  EnumStringMemberCloneSignature &
  EnumSymbolBodyCloneSignature &
  ExistsTypeAnnotationCloneSignature &
  ExportAllDeclarationCloneSignature &
  ExportDefaultDeclarationCloneSignature &
  ExportNamedDeclarationCloneSignature &
  ExportSpecifierCloneSignature &
  ExpressionStatementCloneSignature &
  ForInStatementCloneSignature &
  ForOfStatementCloneSignature &
  ForStatementCloneSignature &
  FunctionDeclarationCloneSignature &
  FunctionExpressionCloneSignature &
  FunctionTypeAnnotationCloneSignature &
  FunctionTypeParamCloneSignature &
  GenericTypeAnnotationCloneSignature &
  IdentifierCloneSignature &
  IfStatementCloneSignature &
  ImportAttributeCloneSignature &
  ImportDeclarationCloneSignature &
  ImportDefaultSpecifierCloneSignature &
  ImportExpressionCloneSignature &
  ImportNamespaceSpecifierCloneSignature &
  ImportSpecifierCloneSignature &
  IndexedAccessTypeCloneSignature &
  InferredPredicateCloneSignature &
  InferTypeAnnotationCloneSignature &
  InterfaceDeclarationCloneSignature &
  InterfaceExtendsCloneSignature &
  InterfaceTypeAnnotationCloneSignature &
  IntersectionTypeAnnotationCloneSignature &
  JSXAttributeCloneSignature &
  JSXClosingElementCloneSignature &
  JSXClosingFragmentCloneSignature &
  JSXElementCloneSignature &
  JSXEmptyExpressionCloneSignature &
  JSXExpressionContainerCloneSignature &
  JSXFragmentCloneSignature &
  JSXIdentifierCloneSignature &
  JSXMemberExpressionCloneSignature &
  JSXNamespacedNameCloneSignature &
  JSXOpeningElementCloneSignature &
  JSXOpeningFragmentCloneSignature &
  JSXSpreadAttributeCloneSignature &
  JSXSpreadChildCloneSignature &
  JSXTextCloneSignature &
  KeyofTypeAnnotationCloneSignature &
  LabeledStatementCloneSignature &
  LogicalExpressionCloneSignature &
  MemberExpressionCloneSignature &
  MetaPropertyCloneSignature &
  MethodDefinitionCloneSignature &
  MixedTypeAnnotationCloneSignature &
  NewExpressionCloneSignature &
  NullableTypeAnnotationCloneSignature &
  NullLiteralCloneSignature &
  NullLiteralTypeAnnotationCloneSignature &
  NumberLiteralTypeAnnotationCloneSignature &
  NumberTypeAnnotationCloneSignature &
  NumericLiteralCloneSignature &
  ObjectExpressionCloneSignature &
  ObjectPatternCloneSignature &
  ObjectTypeAnnotationCloneSignature &
  ObjectTypeCallPropertyCloneSignature &
  ObjectTypeIndexerCloneSignature &
  ObjectTypeInternalSlotCloneSignature &
  ObjectTypeMappedTypePropertyCloneSignature &
  ObjectTypePropertyCloneSignature &
  ObjectTypeSpreadPropertyCloneSignature &
  OpaqueTypeCloneSignature &
  OptionalIndexedAccessTypeCloneSignature &
  PrivateIdentifierCloneSignature &
  PropertyCloneSignature &
  PropertyDefinitionCloneSignature &
  QualifiedTypeIdentifierCloneSignature &
  QualifiedTypeofIdentifierCloneSignature &
  RegExpLiteralCloneSignature &
  RestElementCloneSignature &
  ReturnStatementCloneSignature &
  SequenceExpressionCloneSignature &
  SpreadElementCloneSignature &
  StringLiteralCloneSignature &
  StringLiteralTypeAnnotationCloneSignature &
  StringTypeAnnotationCloneSignature &
  SuperCloneSignature &
  SwitchCaseCloneSignature &
  SwitchStatementCloneSignature &
  SymbolTypeAnnotationCloneSignature &
  TaggedTemplateExpressionCloneSignature &
  TemplateElementCloneSignature &
  TemplateLiteralCloneSignature &
  ThisExpressionCloneSignature &
  ThisTypeAnnotationCloneSignature &
  ThrowStatementCloneSignature &
  TryStatementCloneSignature &
  TupleTypeAnnotationCloneSignature &
  TupleTypeLabeledElementCloneSignature &
  TupleTypeSpreadElementCloneSignature &
  TypeAliasCloneSignature &
  TypeAnnotationCloneSignature &
  TypeCastExpressionCloneSignature &
  TypeofTypeAnnotationCloneSignature &
  TypeOperatorCloneSignature &
  TypeParameterCloneSignature &
  TypeParameterDeclarationCloneSignature &
  TypeParameterInstantiationCloneSignature &
  TypePredicateCloneSignature &
  UnaryExpressionCloneSignature &
  UnionTypeAnnotationCloneSignature &
  UpdateExpressionCloneSignature &
  VariableDeclarationCloneSignature &
  VariableDeclaratorCloneSignature &
  VarianceCloneSignature &
  VoidTypeAnnotationCloneSignature &
  WhileStatementCloneSignature &
  WithStatementCloneSignature &
  YieldExpressionCloneSignature;
