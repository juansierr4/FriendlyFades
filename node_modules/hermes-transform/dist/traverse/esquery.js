/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 * @format
 */
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.query = exports.parse = exports.matches = exports.match = void 0;

var _esquery = _interopRequireDefault(require("esquery"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// $FlowExpectedError[cannot-resolve-module]

/** Parse a selector and return its AST. */
const parse = _esquery.default.parse;
/** From a JS AST and a selector AST, collect all JS AST nodes that match the selector. */

exports.parse = parse;
const match = _esquery.default.match;
/** Given a `node` and its ancestors, determine if `node` is matched by `selector`. */

exports.match = match;
const matches = _esquery.default.matches;
/** Query the code AST using the selector string. */

exports.matches = matches;
const query = _esquery.default.query;
exports.query = query;