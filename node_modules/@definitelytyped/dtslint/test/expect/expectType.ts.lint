
// $ExpectType xxx

~nil [TypeScript@next: Can not match a node to this assertion. If this is a multiline function call, ensure the assertion is on the line above.]

// $ExpectType number[]
[1, 2];

// $ExpectType 1
1; // $ExpectType 2
~~~~~~~~~~~~~~~~~~~ [TypeScript@next: This line has 2 $ExpectType assertions.]

// Do nothing for commented-out comments
// f; // $ExpectType foo

declare function f(
    one: number,
    two: [number, number],
    three: [number, number, number],
    four: [number, number, number, number]): number;

// Test that we never truncate types.
f; // $ExpectType (one: number, two: [number, number], three: [number, number, number], four: [number, number, number, number]) => number

// Test assertion at the end of a multiline function call
f(
    1,
    [2, 2],
    [3, 3, 3,],
    [4, 4, 4, 4]
) // $ExpectType number;
~~~~~~~~~~~~~~~~~~~~~~~~ [TypeScript@next: Can not match a node to this assertion. If this is a multiline function call, ensure the assertion is on the line above.]

// Test that we get the type of the initializer on a variable declaration.
// $ExpectType 1
const x = 1;

declare const ar: readonly number[];
ar; // $ExpectType ReadonlyArray<number>