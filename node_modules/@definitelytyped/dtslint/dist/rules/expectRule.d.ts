import * as Lint from "tslint";
import * as TsType from "typescript";
declare type Program = TsType.Program;
declare type SourceFile = TsType.SourceFile;
export declare class Rule extends Lint.Rules.TypedRule {
    static metadata: Lint.IRuleMetadata;
    static FAILURE_STRING_DUPLICATE_ASSERTION: string;
    static FAILURE_STRING_ASSERTION_MISSING_NODE: string;
    static FAILURE_STRING(expectedVersion: string, expectedType: string, actualType: string): string;
    applyWithProgram(sourceFile: SourceFile, lintProgram: Program): Lint.RuleFailure[];
}
export interface Options {
    readonly tsconfigPath: string;
    readonly versionsToTest: readonly VersionToTest[];
}
export interface VersionToTest {
    readonly versionName: string;
    readonly path: string;
}
/** Maps a tslint Program to one created with the version specified in `options`. */
export declare function getProgram(configFile: string, ts: typeof TsType, versionName: string, lintProgram: Program): Program;
export {};
