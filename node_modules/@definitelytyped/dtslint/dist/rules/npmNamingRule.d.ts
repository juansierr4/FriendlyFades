import { ExportErrorKind, Mode } from "@definitelytyped/dts-critic";
import * as Lint from "tslint";
import * as ts from "typescript";
/** Options as parsed from the rule configuration. */
declare type ConfigOptions = {
    mode: Mode.NameOnly;
    singleLine?: boolean;
} | {
    mode: Mode.Code;
    errors: [ExportErrorKind, boolean][];
    singleLine?: boolean;
};
export declare class Rule extends Lint.Rules.AbstractRule {
    static metadata: Lint.IRuleMetadata;
    apply(sourceFile: ts.SourceFile): Lint.RuleFailure[];
}
/**
 * Given npm-naming lint failures, returns a rule configuration that prevents such failures.
 */
export declare function disabler(failures: Lint.IRuleFailureJson[]): false | [true, ConfigOptions];
export {};
